# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = tstxmalloc$(EXEEXT) tsticonv$(EXEEXT) \
	tstnmem$(EXEEXT) tstmatchstr$(EXEEXT) tstwrbuf$(EXEEXT) \
	tstodr$(EXEEXT) tstccl$(EXEEXT) tstlog$(EXEEXT) \
	tstsoap1$(EXEEXT) tstsoap2$(EXEEXT) tstodrstack$(EXEEXT) \
	tstlogthread$(EXEEXT) tstxmlquery$(EXEEXT) tstpquery$(EXEEXT) \
	tst_comstack$(EXEEXT) tst_filepath$(EXEEXT) \
	tst_record_conv$(EXEEXT) tst_retrieval$(EXEEXT) \
	tst_tpath$(EXEEXT) tst_timing$(EXEEXT) \
	tst_query_charset$(EXEEXT) tst_oid$(EXEEXT) \
	tst_icu_I18N$(EXEEXT) tst_match_glob$(EXEEXT) \
	tst_rpn2cql$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_icu.m4 \
	$(top_srcdir)/m4/acx_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/yaz.m4 $(top_srcdir)/m4/yaz_libxml2.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_VPATH_FILES =
am_tst_comstack_OBJECTS = tst_comstack.$(OBJEXT)
tst_comstack_OBJECTS = $(am_tst_comstack_OBJECTS)
tst_comstack_LDADD = $(LDADD)
tst_comstack_DEPENDENCIES = ../src/libyaz.la
am_tst_filepath_OBJECTS = tst_filepath.$(OBJEXT)
tst_filepath_OBJECTS = $(am_tst_filepath_OBJECTS)
tst_filepath_LDADD = $(LDADD)
tst_filepath_DEPENDENCIES = ../src/libyaz.la
am_tst_icu_I18N_OBJECTS = tst_icu_I18N.$(OBJEXT)
tst_icu_I18N_OBJECTS = $(am_tst_icu_I18N_OBJECTS)
am__DEPENDENCIES_1 =
tst_icu_I18N_DEPENDENCIES = ../src/libyaz_icu.la $(am__DEPENDENCIES_1)
am_tst_match_glob_OBJECTS = tst_match_glob.$(OBJEXT)
tst_match_glob_OBJECTS = $(am_tst_match_glob_OBJECTS)
tst_match_glob_LDADD = $(LDADD)
tst_match_glob_DEPENDENCIES = ../src/libyaz.la
am_tst_oid_OBJECTS = tst_oid.$(OBJEXT)
tst_oid_OBJECTS = $(am_tst_oid_OBJECTS)
tst_oid_LDADD = $(LDADD)
tst_oid_DEPENDENCIES = ../src/libyaz.la
am_tst_query_charset_OBJECTS = tst_query_charset.$(OBJEXT)
tst_query_charset_OBJECTS = $(am_tst_query_charset_OBJECTS)
tst_query_charset_LDADD = $(LDADD)
tst_query_charset_DEPENDENCIES = ../src/libyaz.la
am_tst_record_conv_OBJECTS = tst_record_conv.$(OBJEXT)
tst_record_conv_OBJECTS = $(am_tst_record_conv_OBJECTS)
tst_record_conv_LDADD = $(LDADD)
tst_record_conv_DEPENDENCIES = ../src/libyaz.la
am_tst_retrieval_OBJECTS = tst_retrieval.$(OBJEXT)
tst_retrieval_OBJECTS = $(am_tst_retrieval_OBJECTS)
tst_retrieval_LDADD = $(LDADD)
tst_retrieval_DEPENDENCIES = ../src/libyaz.la
am_tst_rpn2cql_OBJECTS = tst_rpn2cql.$(OBJEXT)
tst_rpn2cql_OBJECTS = $(am_tst_rpn2cql_OBJECTS)
tst_rpn2cql_LDADD = $(LDADD)
tst_rpn2cql_DEPENDENCIES = ../src/libyaz.la
am_tst_timing_OBJECTS = tst_timing.$(OBJEXT)
tst_timing_OBJECTS = $(am_tst_timing_OBJECTS)
tst_timing_LDADD = $(LDADD)
tst_timing_DEPENDENCIES = ../src/libyaz.la
am_tst_tpath_OBJECTS = tst_tpath.$(OBJEXT)
tst_tpath_OBJECTS = $(am_tst_tpath_OBJECTS)
tst_tpath_LDADD = $(LDADD)
tst_tpath_DEPENDENCIES = ../src/libyaz.la
am_tstccl_OBJECTS = tstccl.$(OBJEXT)
tstccl_OBJECTS = $(am_tstccl_OBJECTS)
tstccl_LDADD = $(LDADD)
tstccl_DEPENDENCIES = ../src/libyaz.la
am_tsticonv_OBJECTS = tsticonv.$(OBJEXT)
tsticonv_OBJECTS = $(am_tsticonv_OBJECTS)
tsticonv_LDADD = $(LDADD)
tsticonv_DEPENDENCIES = ../src/libyaz.la
am_tstlog_OBJECTS = tstlog.$(OBJEXT)
tstlog_OBJECTS = $(am_tstlog_OBJECTS)
tstlog_LDADD = $(LDADD)
tstlog_DEPENDENCIES = ../src/libyaz.la
am_tstlogthread_OBJECTS = tstlogthread.$(OBJEXT)
tstlogthread_OBJECTS = $(am_tstlogthread_OBJECTS)
tstlogthread_LDADD = $(LDADD)
tstlogthread_DEPENDENCIES = ../src/libyaz.la
am_tstmatchstr_OBJECTS = tstmatchstr.$(OBJEXT)
tstmatchstr_OBJECTS = $(am_tstmatchstr_OBJECTS)
tstmatchstr_LDADD = $(LDADD)
tstmatchstr_DEPENDENCIES = ../src/libyaz.la
am_tstnmem_OBJECTS = tstnmem.$(OBJEXT)
tstnmem_OBJECTS = $(am_tstnmem_OBJECTS)
tstnmem_LDADD = $(LDADD)
tstnmem_DEPENDENCIES = ../src/libyaz.la
am_tstodr_OBJECTS = tstodrcodec.$(OBJEXT) tstodr.$(OBJEXT)
tstodr_OBJECTS = $(am_tstodr_OBJECTS)
tstodr_LDADD = $(LDADD)
tstodr_DEPENDENCIES = ../src/libyaz.la
am_tstodrstack_OBJECTS = tstodrstack.$(OBJEXT)
tstodrstack_OBJECTS = $(am_tstodrstack_OBJECTS)
tstodrstack_LDADD = $(LDADD)
tstodrstack_DEPENDENCIES = ../src/libyaz.la
am_tstpquery_OBJECTS = tstpquery.$(OBJEXT)
tstpquery_OBJECTS = $(am_tstpquery_OBJECTS)
tstpquery_LDADD = $(LDADD)
tstpquery_DEPENDENCIES = ../src/libyaz.la
am_tstsoap1_OBJECTS = tstsoap1.$(OBJEXT)
tstsoap1_OBJECTS = $(am_tstsoap1_OBJECTS)
tstsoap1_LDADD = $(LDADD)
tstsoap1_DEPENDENCIES = ../src/libyaz.la
am_tstsoap2_OBJECTS = tstsoap2.$(OBJEXT)
tstsoap2_OBJECTS = $(am_tstsoap2_OBJECTS)
tstsoap2_LDADD = $(LDADD)
tstsoap2_DEPENDENCIES = ../src/libyaz.la
am_tstwrbuf_OBJECTS = tstwrbuf.$(OBJEXT)
tstwrbuf_OBJECTS = $(am_tstwrbuf_OBJECTS)
tstwrbuf_LDADD = $(LDADD)
tstwrbuf_DEPENDENCIES = ../src/libyaz.la
am_tstxmalloc_OBJECTS = tstxmalloc.$(OBJEXT)
tstxmalloc_OBJECTS = $(am_tstxmalloc_OBJECTS)
tstxmalloc_LDADD = $(LDADD)
tstxmalloc_DEPENDENCIES = ../src/libyaz.la
am_tstxmlquery_OBJECTS = tstxmlquery.$(OBJEXT)
tstxmlquery_OBJECTS = $(am_tstxmlquery_OBJECTS)
tstxmlquery_LDADD = $(LDADD)
tstxmlquery_DEPENDENCIES = ../src/libyaz.la
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(tst_comstack_SOURCES) $(tst_filepath_SOURCES) \
	$(tst_icu_I18N_SOURCES) $(tst_match_glob_SOURCES) \
	$(tst_oid_SOURCES) $(tst_query_charset_SOURCES) \
	$(tst_record_conv_SOURCES) $(tst_retrieval_SOURCES) \
	$(tst_rpn2cql_SOURCES) $(tst_timing_SOURCES) \
	$(tst_tpath_SOURCES) $(tstccl_SOURCES) $(tsticonv_SOURCES) \
	$(tstlog_SOURCES) $(tstlogthread_SOURCES) \
	$(tstmatchstr_SOURCES) $(tstnmem_SOURCES) $(tstodr_SOURCES) \
	$(tstodrstack_SOURCES) $(tstpquery_SOURCES) \
	$(tstsoap1_SOURCES) $(tstsoap2_SOURCES) $(tstwrbuf_SOURCES) \
	$(tstxmalloc_SOURCES) $(tstxmlquery_SOURCES)
DIST_SOURCES = $(tst_comstack_SOURCES) $(tst_filepath_SOURCES) \
	$(tst_icu_I18N_SOURCES) $(tst_match_glob_SOURCES) \
	$(tst_oid_SOURCES) $(tst_query_charset_SOURCES) \
	$(tst_record_conv_SOURCES) $(tst_retrieval_SOURCES) \
	$(tst_rpn2cql_SOURCES) $(tst_timing_SOURCES) \
	$(tst_tpath_SOURCES) $(tstccl_SOURCES) $(tsticonv_SOURCES) \
	$(tstlog_SOURCES) $(tstlogthread_SOURCES) \
	$(tstmatchstr_SOURCES) $(tstnmem_SOURCES) $(tstodr_SOURCES) \
	$(tstodrstack_SOURCES) $(tstpquery_SOURCES) \
	$(tstsoap1_SOURCES) $(tstsoap2_SOURCES) $(tstwrbuf_SOURCES) \
	$(tstxmalloc_SOURCES) $(tstxmlquery_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSSSL_DIR = @DSSSL_DIR@
DSYMUTIL = @DSYMUTIL@
DTD_DIR = @DTD_DIR@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HTML_COMPILE = @HTML_COMPILE@
ICU_CFLAGS = @ICU_CFLAGS@
ICU_CONFIG = @ICU_CONFIG@
ICU_CPPFLAGS = @ICU_CPPFLAGS@
ICU_CXXFLAGS = @ICU_CXXFLAGS@
ICU_LIBS = @ICU_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAN_COMPILE = @MAN_COMPILE@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDF_COMPILE = @PDF_COMPILE@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
READLINE_LIBS = @READLINE_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSL_CFLAGS = @SSL_CFLAGS@
SSL_LIBS = @SSL_LIBS@
STRIP = @STRIP@
TCLSH = @TCLSH@
TKL_COMPILE = @TKL_COMPILE@
VERSION = @VERSION@
VERSION_HEX = @VERSION_HEX@
VERSION_SHA1 = @VERSION_SHA1@
WIN_FILEVERSION = @WIN_FILEVERSION@
XML2_CFLAGS = @XML2_CFLAGS@
XSLTPROC_COMPILE = @XSLTPROC_COMPILE@
XSL_DIR = @XSL_DIR@
YACC = @YACC@
YAZ_BUILD_ROOT = @YAZ_BUILD_ROOT@
YAZ_CONFIG_CFLAGS = @YAZ_CONFIG_CFLAGS@
YAZ_CONF_CFLAGS = @YAZ_CONF_CFLAGS@
YAZ_SRC_ROOT = @YAZ_SRC_ROOT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgconfigpath = @pkgconfigpath@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
check_SCRIPTS = tstmarc.sh tstmarccol.sh tstcql2xcql.sh tstcql2pqf.sh tsticu.sh
TESTS = $(check_PROGRAMS) $(check_SCRIPTS)
EXTRA_DIST = tstodr.asn tstodrcodec.c tstodrcodec.h cql2xcqlsample \
 cql2pqf-order.txt cql2pqfsample \
 $(check_SCRIPTS) \
 marc1.marc marc1.xml marc1.chr marc1.xml.marc \
 marc2.marc marc2.xml marc2.chr marc2.xml.marc \
 marc3.marc marc3.xml marc3.chr marc3.xml.marc \
 marc4.marc marc4.xml marc4.chr marc4.xml.marc \
 marc5.marc marc5.xml marc5.chr marc5.xml.marc \
 marc6.marc marc6.xml marc6.chr marc6.xml.marc \
 marc7.marc marc7.xml marc7.chr marc7.xml.marc \
 marc8.marc marc8.xml marc8.chr marc8.xml.marc \
 marc9.marc marc9.xml marc9.chr marc9.xml.marc \
 marccol1.u8.marc marccol1.u8.1.lst marccol1.u8.2.lst \
 marccol2.u8.marc marccol2.u8.1.lst marccol2.u8.2.lst \
 marccol3.u8.marc marccol3.u8.1.lst marccol3.u8.2.lst \
 marccol4.u8.marc marccol4.u8.1.lst marccol4.u8.2.lst \
 marccol5.u8.marc marccol5.u8.1.lst marccol5.u8.2.lst \
 tsticu-0.xml tsticu-0.input tsticu-0.output \
 tsticu-1.xml tsticu-1.input tsticu-1.output \
 tst_record_conv.xsl 

YAZCOMP = ../util/yaz-asncomp
YAZCOMPLINE = $(YAZCOMP) -d z.tcl -i yaz -I../include $(YCFLAGS)
AM_CPPFLAGS = -I$(top_srcdir)/include $(XML2_CFLAGS) $(ICU_CPPFLAGS)
LDADD = ../src/libyaz.la
tst_icu_I18N_LDADD = ../src/libyaz_icu.la $(ICU_LIBS)
CONFIG_CLEAN_FILES = *.log
tstxmalloc_SOURCES = tstxmalloc.c
tsticonv_SOURCES = tsticonv.c
tstnmem_SOURCES = tstnmem.c
tstmatchstr_SOURCES = tstmatchstr.c
tstwrbuf_SOURCES = tstwrbuf.c
tstodr_SOURCES = tstodrcodec.c tstodrcodec.h tstodr.c
tstodrstack_SOURCES = tstodrstack.c
tstccl_SOURCES = tstccl.c
tstlog_SOURCES = tstlog.c
tstsoap1_SOURCES = tstsoap1.c
tstsoap2_SOURCES = tstsoap2.c
tstlogthread_SOURCES = tstlogthread.c
tstxmlquery_SOURCES = tstxmlquery.c
tstpquery_SOURCES = tstpquery.c
tst_comstack_SOURCES = tst_comstack.c
tst_filepath_SOURCES = tst_filepath.c
tst_oid_SOURCES = tst_oid.c
tst_record_conv_SOURCES = tst_record_conv.c
tst_retrieval_SOURCES = tst_retrieval.c
tst_tpath_SOURCES = tst_tpath.c
tst_timing_SOURCES = tst_timing.c
tst_query_charset_SOURCES = tst_query_charset.c
tst_icu_I18N_SOURCES = tst_icu_I18N.c
tst_match_glob_SOURCES = tst_match_glob.c
tst_rpn2cql_SOURCES = tst_rpn2cql.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
tst_comstack$(EXEEXT): $(tst_comstack_OBJECTS) $(tst_comstack_DEPENDENCIES) 
	@rm -f tst_comstack$(EXEEXT)
	$(LINK) $(tst_comstack_OBJECTS) $(tst_comstack_LDADD) $(LIBS)
tst_filepath$(EXEEXT): $(tst_filepath_OBJECTS) $(tst_filepath_DEPENDENCIES) 
	@rm -f tst_filepath$(EXEEXT)
	$(LINK) $(tst_filepath_OBJECTS) $(tst_filepath_LDADD) $(LIBS)
tst_icu_I18N$(EXEEXT): $(tst_icu_I18N_OBJECTS) $(tst_icu_I18N_DEPENDENCIES) 
	@rm -f tst_icu_I18N$(EXEEXT)
	$(LINK) $(tst_icu_I18N_OBJECTS) $(tst_icu_I18N_LDADD) $(LIBS)
tst_match_glob$(EXEEXT): $(tst_match_glob_OBJECTS) $(tst_match_glob_DEPENDENCIES) 
	@rm -f tst_match_glob$(EXEEXT)
	$(LINK) $(tst_match_glob_OBJECTS) $(tst_match_glob_LDADD) $(LIBS)
tst_oid$(EXEEXT): $(tst_oid_OBJECTS) $(tst_oid_DEPENDENCIES) 
	@rm -f tst_oid$(EXEEXT)
	$(LINK) $(tst_oid_OBJECTS) $(tst_oid_LDADD) $(LIBS)
tst_query_charset$(EXEEXT): $(tst_query_charset_OBJECTS) $(tst_query_charset_DEPENDENCIES) 
	@rm -f tst_query_charset$(EXEEXT)
	$(LINK) $(tst_query_charset_OBJECTS) $(tst_query_charset_LDADD) $(LIBS)
tst_record_conv$(EXEEXT): $(tst_record_conv_OBJECTS) $(tst_record_conv_DEPENDENCIES) 
	@rm -f tst_record_conv$(EXEEXT)
	$(LINK) $(tst_record_conv_OBJECTS) $(tst_record_conv_LDADD) $(LIBS)
tst_retrieval$(EXEEXT): $(tst_retrieval_OBJECTS) $(tst_retrieval_DEPENDENCIES) 
	@rm -f tst_retrieval$(EXEEXT)
	$(LINK) $(tst_retrieval_OBJECTS) $(tst_retrieval_LDADD) $(LIBS)
tst_rpn2cql$(EXEEXT): $(tst_rpn2cql_OBJECTS) $(tst_rpn2cql_DEPENDENCIES) 
	@rm -f tst_rpn2cql$(EXEEXT)
	$(LINK) $(tst_rpn2cql_OBJECTS) $(tst_rpn2cql_LDADD) $(LIBS)
tst_timing$(EXEEXT): $(tst_timing_OBJECTS) $(tst_timing_DEPENDENCIES) 
	@rm -f tst_timing$(EXEEXT)
	$(LINK) $(tst_timing_OBJECTS) $(tst_timing_LDADD) $(LIBS)
tst_tpath$(EXEEXT): $(tst_tpath_OBJECTS) $(tst_tpath_DEPENDENCIES) 
	@rm -f tst_tpath$(EXEEXT)
	$(LINK) $(tst_tpath_OBJECTS) $(tst_tpath_LDADD) $(LIBS)
tstccl$(EXEEXT): $(tstccl_OBJECTS) $(tstccl_DEPENDENCIES) 
	@rm -f tstccl$(EXEEXT)
	$(LINK) $(tstccl_OBJECTS) $(tstccl_LDADD) $(LIBS)
tsticonv$(EXEEXT): $(tsticonv_OBJECTS) $(tsticonv_DEPENDENCIES) 
	@rm -f tsticonv$(EXEEXT)
	$(LINK) $(tsticonv_OBJECTS) $(tsticonv_LDADD) $(LIBS)
tstlog$(EXEEXT): $(tstlog_OBJECTS) $(tstlog_DEPENDENCIES) 
	@rm -f tstlog$(EXEEXT)
	$(LINK) $(tstlog_OBJECTS) $(tstlog_LDADD) $(LIBS)
tstlogthread$(EXEEXT): $(tstlogthread_OBJECTS) $(tstlogthread_DEPENDENCIES) 
	@rm -f tstlogthread$(EXEEXT)
	$(LINK) $(tstlogthread_OBJECTS) $(tstlogthread_LDADD) $(LIBS)
tstmatchstr$(EXEEXT): $(tstmatchstr_OBJECTS) $(tstmatchstr_DEPENDENCIES) 
	@rm -f tstmatchstr$(EXEEXT)
	$(LINK) $(tstmatchstr_OBJECTS) $(tstmatchstr_LDADD) $(LIBS)
tstnmem$(EXEEXT): $(tstnmem_OBJECTS) $(tstnmem_DEPENDENCIES) 
	@rm -f tstnmem$(EXEEXT)
	$(LINK) $(tstnmem_OBJECTS) $(tstnmem_LDADD) $(LIBS)
tstodr$(EXEEXT): $(tstodr_OBJECTS) $(tstodr_DEPENDENCIES) 
	@rm -f tstodr$(EXEEXT)
	$(LINK) $(tstodr_OBJECTS) $(tstodr_LDADD) $(LIBS)
tstodrstack$(EXEEXT): $(tstodrstack_OBJECTS) $(tstodrstack_DEPENDENCIES) 
	@rm -f tstodrstack$(EXEEXT)
	$(LINK) $(tstodrstack_OBJECTS) $(tstodrstack_LDADD) $(LIBS)
tstpquery$(EXEEXT): $(tstpquery_OBJECTS) $(tstpquery_DEPENDENCIES) 
	@rm -f tstpquery$(EXEEXT)
	$(LINK) $(tstpquery_OBJECTS) $(tstpquery_LDADD) $(LIBS)
tstsoap1$(EXEEXT): $(tstsoap1_OBJECTS) $(tstsoap1_DEPENDENCIES) 
	@rm -f tstsoap1$(EXEEXT)
	$(LINK) $(tstsoap1_OBJECTS) $(tstsoap1_LDADD) $(LIBS)
tstsoap2$(EXEEXT): $(tstsoap2_OBJECTS) $(tstsoap2_DEPENDENCIES) 
	@rm -f tstsoap2$(EXEEXT)
	$(LINK) $(tstsoap2_OBJECTS) $(tstsoap2_LDADD) $(LIBS)
tstwrbuf$(EXEEXT): $(tstwrbuf_OBJECTS) $(tstwrbuf_DEPENDENCIES) 
	@rm -f tstwrbuf$(EXEEXT)
	$(LINK) $(tstwrbuf_OBJECTS) $(tstwrbuf_LDADD) $(LIBS)
tstxmalloc$(EXEEXT): $(tstxmalloc_OBJECTS) $(tstxmalloc_DEPENDENCIES) 
	@rm -f tstxmalloc$(EXEEXT)
	$(LINK) $(tstxmalloc_OBJECTS) $(tstxmalloc_LDADD) $(LIBS)
tstxmlquery$(EXEEXT): $(tstxmlquery_OBJECTS) $(tstxmlquery_DEPENDENCIES) 
	@rm -f tstxmlquery$(EXEEXT)
	$(LINK) $(tstxmlquery_OBJECTS) $(tstxmlquery_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_comstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_filepath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_icu_I18N.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_match_glob.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_oid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_query_charset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_record_conv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_retrieval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_rpn2cql.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_timing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_tpath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstccl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsticonv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstlog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstlogthread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstmatchstr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstnmem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstodr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstodrcodec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstodrstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstpquery.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstsoap1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstsoap2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstwrbuf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstxmalloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstxmlquery.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	dist-hook distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


dist-hook:
	mkdir -p $(distdir)/cql
	cp $(srcdir)/cql/*.err $(srcdir)/cql/*.out $(distdir)/cql
	mkdir -p $(distdir)/cql2pqf
	cp $(srcdir)/cql2pqf/*.err $(srcdir)/cql2pqf/*.out $(distdir)/cql2pqf

# Rule for generating codecs for our small ASN.1 spec
tstodrcodec.c tstodrcodec.h: tstodr.asn $(YAZCOMP)
	cd $(srcdir); $(YAZCOMP) tstodr.asn

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
