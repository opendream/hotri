--- 3.0.52 2009/12/03

tcpip comstack: fix use of uinitialized variable in cs_straddr. This
bug was introduced in 3.0.51.

--- 3.0.51 2009/12/02

tcpip comstack: Remove TCP receiver buffer optimizations for Solaris.

tcpip comstack: fix leak for getaddrinfo.

Encoding of SRU database is performed by yaz_encode_sru_dbpath_odr or
yaz_encode_sru_dbpath_buf. Now used by yaz-client and the ZOOM API.
Decoding of SRU "path" database is performed by private function
yaz_decode_sru_dbpath_odr . This in turn is used by yaz_srw_decode
and yaz_sru_decode in server applications, GFS, yazproxy, metaproxy.

yaz-client: honor base command for SRU. Change when database setting
is applied for SRU and ensure it is kept when a connection is reset.
Change also the way errors are displayed or SRU (decoding of packages).

--- 3.0.50 2009/11/02

Add support for extra request / response data for SRU codecs and GFS.
The Z_SRW_PDU structure has two new members extraResponseData_{buf,len}
for extra data response buffer and length. For the GFS, both request
and response data (XML) is carried in extra_args and extra_response_data
for the search handler. Patch by Ko van der Sloot.

ZOOM: For queries that cannot be converted to the specified rpnCharset,
ZOOM now returns a diagnostic on the client-side ('invalid query' /
10010).  This fixes bug #2113.

yaz-client fix: If cmdfile is passed to yaz-client (option -f) and that
cmdfile included a 'quit' command that would result in a memory violation.

--- 3.0.49 2009/10/01

Make a number of functions defined in xmlquery.c static. These have
never been declared in a public header file (yaz/xmlquery.h) and was
made public by mistake.

Improve speed of character conversions (iconv utilities). This makes
conversions from MARC-8 faster.

ZOOM_record_get returns 0 pointer if a MARC record can not be decoded -
unless type desired is "raw". This will prevent type "xml" from
returning ISO2709 .. Which obviously can not be XML parsed.

Fix memory leak in ZOOM that would occur if option apdulog was used
on a re-used connection.

Frontend server logs HTTP requests.

Frontend server now sends Z39.50 close when it times out (sesssion has
been idle for too long). Versions 2.0.30 and earlier also sent close.
But due to a mistake this was disabled in all versions after that, i.e.
the server would just close the socket immediately.

yaz-client emits a better message when receiving an unrecognised
userInformationField.

Skip zero-length subfields when decoding ISO2709. This rare case happens
if a record has two FS characters in a sequence. Without this patch
there would be a reference beyond char array in using_code_len fragments
in marcdisp.c.

Fix yaz-marcdump error that would occur if option -n was used (bug #3028).

--- 3.0.48 2009/08/28

The show command offered by the zoomsh command now takes a 3d optional
parameter type which is what is passed to ZOOM_record. If the type
argument is omitted, "render" is used.

RPN to CQL conv may use USE string attributes (bug #2978).

MarcXchange NS is now info:lc/xmlns/marcxchange-v1 .

--- 3.0.47 2009/07/08

Function yaz_xml2query allows a diagnostic element in the PQF XML
representation .. diagnostic@code and diagnostic@addinfo is diagnostic
code and additional info respectively.

The BER BOOLEAN is now the integral type Odr_bool which still happens
to be an 'int'. The BER INTEGER which used to be a plain 'int' is now
typedef'd to Odr_int. This is still an integral 'int', but it may be
changed to 64-bit via a one-liner in nmem.h (NMEM_64=1). The documentation,
ASN-1 compiler as well as programs has been updated to use the new types.

--- 3.0.46 2009/06/08

zoom: ZOOM_record_get now renders OPAC records when type=xml. Previously
only the bibliographic record was rendered. For type=opac, an OPAC
record is only returned if it is present.

iconv: small fix for encoding of advancegreek.

yaz-client: avoid double display of SRU/SRW records (bug #2798).

yaz-client: option auto_reconnect=on really reconnects.

yaz-client: fix bug #2770 - avoid length limit for auth parameters.

server: avoid null ptr ref for for yaz_poll errors.

build: fix RPM build for RHEL 5.3.

comstack: prefer IPV6 addresses over IPV4 - should refix bug #2350

--- 3.0.45 2009/03/31

Fixed bug #2709: TCP connect returns Invalid argument.

Fixed compilation for mingw.

Honor charset for raw records (ZOOM_record_get).

Fixed use of errno for threaded mode that was seen on Solaris 10.

Fixed argument passing with blanks in value for Windows Service.

Disable YAZ' own log rotate by default (no 1 GB limit).
The variable l_max_size which specifies the log file limit is set to 0
(DISABLED): This is due to the fact that YAZ is most often deployed using
logrotate. Also YAZ can not perform log rotate because of unsufficient
permissions (setuid).

--- 3.0.44 2009/02/17

List supported encodings in man page for yaz-iconv.

Fixed missing SSL libs for --libs output

Re-established OID record syntax application-xml. Nobody should use it
but we don't want to change soname because of this symbol being absent.

--- 3.0.42 2009/02/02

YAZ' RPM spec works for both SUSE Linux Enterprise and RedHat Fedora.

Added member named_result_sets for init handler struct for the GFS. This
allows a server to disable named result sets.

Removed OID record syntax application-xml.

Added support for rule-based transliterator for ICU wrapper of YAZ.

Fixed bug #1902: yaz-icu XML output.

Make YAZ checks Emacs friendly.

BITSTRING value shows value. Bug #2346.

ISO2709 decoding: skip control characters from indicator data.

Omit sort key by default in yaz-icu's output.

Allow combined single char options (again) for YAZ' options function.

Utility yaz-marcdump got option to display YAZ version (-V).

Allow YAZ to use ICU 3.4.

Added new ICU test case which illustrates removal of diacritics.

--- 3.0.41 2008/12/29

Fixed Fixed test that makes VERSION_SHA1 appear on dist versions too.

--- 3.0.40 2008/12/29

For configure, using option --without-xml2 also disables Libxslt/Libexslt
support.

Fixed bug #2352: yaz-marcdump crashes for certain record.

Added man page 'bib1-attr' which includes list of common Bib-1 attributes.

Added support for Danmarc2 to UTF-8 conversion.

Added support for ISO5426 to UTF-8 conversion.

zget_InitRequest/zget_InitResponse returns GIT SHA1 hash as part of 
implementation version.

Function yaz_version returns GIT SHA1 hash for parameter sha1_str.

--- 3.0.38 2008/11/10

ZOOM C now only fires one ZOOM_EVENT_SEARCH per search-task. Previously,
ZOOM_EVENT_SEARCH was fired for each searchRetrieve Response received.

ZOOM C now interprets databaseName option for ZOOM connection as path
(SRU "database").

Windows version bundled with Libxml2 2.7.1 / Libxslt 1.1.24 / ICU 4.0.

Fixed CCL to RPN/PQF conversion which could result in invalid PQF.

Dummy Libxml2 types no longer defined in headers of YAZ'.

Fixed memory violation for ZOOM C - could occur when SRU diagnostics was
received.

--- 3.0.36 2008/09/26

Various ODR chapter fixes.

Windows version uses libxml2 2.6.32+, libxslt 1.1.23+ and ICU 4.0.

Added missing source for Windows compilation, mutex.c.

Fixed compilation of YAZ for Visual Studio 2008. Bug #2256.

For SRU connections in ZOOM all records up to "count" are now fetched.

Fixed crash in generic frontend server (and yaz-ztest) which occurred
in Windows due to bad error handling for Libxml2.

Added facility for sending arbitrary records (ASN.1 any) using
ZOOM C's Extended service update. Patch by Sam Reynolds.

New options for ZOOM C's connection, logapdu which makes ZOOM log
APDUs.

--- 3.0.34 2008/06/18

YAZ uses GNU TLS without the OpenSSL compatibility wrapper.

--- 3.0.32 2008/06/12

Fixed memory violation that could occur when decoding UTF-8. This bug
was only present in 3.0.30 of YAZ.

--- 3.0.30 2008/06/06

Implemented SSL sockets using GNU TLS. OpenSSL is still supported, but
GNU TLS is used by default (if found).

yaz-ztest returns OPAC records if a client asks for OPAC.

Improved speed of MARC-8 encoding.

Added support for lossy and loss-less MARC-8 encoding.

Changed yaz_record_conv_record to be reentrant for XSLT conversions.

Added new Windows Service wrapper (sc).

yaz-client's itemorder command may now send a file.

Fixed yaz-marcdump to allow the use of NS prefix for record element.

Added new function yaz_log_xml_errors.

Allow (but warn) unknown XML attributes in MARCXML parsing.

Handle G1 sequneces in MARC-8 decoding. Bug #2115.

The UTF-8 to MARC-8 conversion now uses a different set of characters
for Greek symbols. Bug #2120.

--- 3.0.26 2008/02/21

Added yaz_daemon (daemon.h).

Fixed bug #2068: pkg-config trouble

Fixed bug #395: ZOOM_record / OPAC record encoding problems.

--- 3.0.24 2008/01/28

Document --with-xml2 option.

Added OPAC XML XSD (etc/opacxml.xsd).

Allow glob mask for name attribute in retrieval element for the 
generic frontend server's retrieval facility.

Changed yaz_poll_poll to return yaz_poll_except for all returned events
except POLLIN/POLLOUT.

Fixed error handling in cs_listen. Bug #2037.

--- 3.0.22 2008/01/20

Fixed version in yaz/yaz-version.h.

Fixed bug #2027: Crash when closing connection.

Changed configure so that ICU support is only enabled if only ICU
and Libxml2 is available (because the ICU chain is XML based).

--- 3.0.20 2008/01/15

YAZ now makes ICU utilities for Windows. A separate DLL, yaz_icu3.dll,
is built. Only this DLL depends on the ICU runtime.

yaz-ziffy is no longer part of YAZ. It is distributed separately by
Index Data because ziffy's license is GPL2 rather then 'Revised BSD'.

Changed license of CCL module to 'Revised BSD'. After consultation with
remaining members of the original EUROPAGATE consortium, we are re-issuing
the CCL module without a separate license. The software was developed by
Index Data as part of a research project. The special license was included
to help feed usage information back to the project consortium to support
project evaluation. At this time, the project consortium has long-since
disbanded, and the majority of the original principals have retired. At the
same time, we have significantly modified the software during the following
years, to the point where very practically no original code remains. To
simplify re-use of the software, we have contacted those members of the
consortium who could be reached, and agreed to re-issue the module as a
proper part of the YAZ package.

Tcl scripts uses /usr/bin/tclsh as preferred shell.

CQL closer to being version 1.2 compliant. CQL also allows free-form
terms, such as 'title=a b', and thus, make the CQL parser more CCL-like
and user-frendly.

Fixed bug in ZOOM_options_getl WRT setting of parameter lenp. This
bug could make Extended services handling crash in the ZOOM layer. This
bug was only present in YAZ 3.0.18.

--- 3.0.18 2007/12/19

ziffy uses YAZ' options rather than getopt; getopt is unavailable on
some systems.

yaz-marcdump reads and writes collection wrapped records.

Handle OPAC for record conversion module.

Fixes for ICU wrapper.

Allow ICU libs to be controlled with --with-icu .

--- 3.0.16 2007/11/12

Added yaz_poll which is a wrapper for select/poll. When poll is available
and non-buggy, it is used, by yaz_poll . This allows more than 1024
sockets to be in use.

Added ICU wrapper library which exposes ICU http://www.icu-project.org/
functionality through an XML based configuration (ICU chain). This system
is useful for search facilities such as Pazpar2 and Zebra that needs to
perform tokenization of indexed material. The ICU code in a separate
library libyaz3_icu.a.

Added HTTP tunnel facility for COMSTACK, bug #1752.
This is a facility that allows a Web proxy, such as squid, to tunnel
Z39.50 traffic. This facility is "transparent" to must applications
using YAZ. It's enabled by using pseudo transport connect: followed by
the proxy address, followed by command, then follwed by he regular
"virtual" addresss. For example,
connect:webproxy.com:3128,tcp:z3950.loc.gov:7090/voyager . 

More MARC-8/UTF-8 conversion fixes. Bugs #1666, #1667, #1778.

--- 3.0.14 2007/09/21

Fixed bad memory reference in ZOOM_record - cuased by member not being
initialized. This was a problem only in YAZ 3.0.12.

Fixed bug in conversion from MARC to XML: Non-XML characters in control
fields were not removed.

Changed the way C code is generated from codetables.xml.  Made a MARC-8
conversion trie for each characterSet section rather than codeTable.
This is ensure the code can deal with G0/G1 sequences. Use of a newer version
of codetables.xml from Larry Dixson, LOC. Bug #1464.

--- 3.0.12 2007/09/12

ZOOM C now handles SRU surrogate diagnostics (i.e. errors returned
from ZOOM_record_error).

ZOOM C function ZOOM_record_get returns record schema for type="schema".

Implemented HTTP Basic authentication to SRU/GET, SRU/POST and SRW requests.

Added new ZOOM C connection option 'sru_option' which specifies SRU version.

Better SRW-to-Bib-1 diagnostic mapping.

ZOOM C and yaz-client announces SRU version 1.2 by default.

yaz-client 'sru' command may specifiy both SRU version and transport (SOAP,
GET or POST).

Fixed in yaz_sru_decode to allow other version than 1.1.

--- 3.0.10 2007/08/22

Added support for SRU scan for ZOOM.

Added support for the use of the older versions or Extended Service
Update in ZOOM. To faciliate this, an option "updateVersion" may be
set to the version , 1=first, 2=second, 3=third. The third version is
what ZOOM C has used so far. And that, obviously, is the default.

Added support for CCL queries in Z39.50 queries sent to the GFS (and
therefore in Zebra and in SimpleServer-based applications).  The new
<ccl2rpn> element in a GFS configuration file, if present, names a CCL
qualifier file used to transform incoming CCL queries into Type-1 RPN,
which is passed into the back-end search callback function.

Added support for HTTP Basic authentication in clients: the SRU/W
codec encodes the username/password elements of the PDU structure
appropriately, and these may be set using the "user" and "password"
options in ZOOM-C applications (the same options that are used for
Z39.50 authentication).

--- 3.0.8 2007/06/25

Fixed bug #1208: SSL appears to be broken in ZOOM.

Fixed bug #1206: Libxml2 include path weirdness. 

Added oid_name_to_dotstring.

Allow elementSetName to be specified for ZOOM C record update.

Allow waitAction to be specified for ZOOM C based for Extended Services.

Fixed NULL ptr reference bug in yaz-ztest - caused by omitted record
syntax OID. Bug introduced in YAZ 3 series.

Updated WIN32 build to include Libxml2 2.6.28 / Libxslt 1.1.19.

--- 3.0.6 2007/06/06

Fixed bug #1157: yaz-client does not read .yazclientrc from current
directory. yaz-client now reads commands from file given by option -f
if specified; then tries to read .yazclientrc in current directory.
Failing that, it reads .yazclientrc from user's home directory.

Added support for correlationInfo Note and ID for Record Update via
ZOOM C.

Added yaz-client command querycharset which specifies character set for
query terms for Z39.50 RPN queries and Z39.50 Scan Requests
(termListAndStartPoint).

Charset ISO5428:1984 is an alias for ISO5428-1984.

Implemented a way to perform scan in a result set using Z39.50. This
is achieved by attaching the result set name in the characterInfo
(type InternationalString) of OtherInformation in the Scan Request PDU.
The result set is identified in the otherinformation by the new OID:
 USERINFO, Z3950_PREFIX.10.1000.81.4, "Scan-Set
This allows for scan in result set and faceted search . Zebra did some
of this in the APT term using attribute type 8 and value being result
set. Using the OtherInformation approach for this is cleaner and easier
to work with in proxies and the like. This facility can be used in
yaz-client using new command setscan which takes a result set as first
argument, start position (APT) as second.

Changed decoding of SRU XML packed records to deal with servers that
have recordData with XML data with multiple root nodes. Also make
comparison for recordPacking case insensitive. Again, one server
returns "XML" where others return "xml".

For SRU responses allow Content-Type application/xml as well as text/xml.

--- 3.0.4 2007/05/21

Fixed bug in character set conversion of BER strings. Bug introduced
in 3.0.0.

--- 3.0.2 2007/05/08

For OIDs use Odr_oid type everywhere, i.e. do not assume Odr_oid=int.

For OID class, use oid_class consistently.

Fixed external handling for SUTRS and Explain records (bug appeared in 3.0
series).

Added partial support for ISO5428-1984, which is the "Greek alphabet coded
character set for bibliographic information interchange". By Giannis Kosmas.

Added documentation on new OID API.

--- 3.0.0 2007/05/02

Changes to generic frontend server interface: added new member
'query_charset' for bend_initrequest structure. A backend init handler
should set this member to its native character set for query terms.
When defined, the frontend server logic will announce this character set
to a client if the negotiationModel bit is set by the client. All server
implementors are encouraged to specify this. If a backend server does not
specify this a warning is issued using yaz_log(YLOG_WARN,..).

Added CCL utility to remove terms (stop words) from resulting RPN
tree. This is handled by functions with prefix ccl_stop_words_ .

New ZOOM C option, "rpnCharset", which allows client-side conversion of
terms in RPN queries.

Clean-up the CCL API. Moved some internal structures from ccl.h to 
private header cclp.h. Changed ccl_parser_create so that a Bibset must
be supplied. Removed tokenize API from ccl.h - including ccl_parser_find.
This is replaced by ccl_parser_find_str which takes a string instead.

Split YAZ library into two libs : libyaz.la and libyaz_server.la.
libyaz.la is the core of YAZ except the generic frontend server and
does not depend on POSIX threads anymore. libyaz_server.la is the
generic frontend server facilities and uses POSIX thread functionality
if available. The libyaz.la no longer depends on POSIX threads because
the number of global structures is limited. NMEM no longer re-uses blocks
between threads ; it simply free's memory immediately but allocates in
"large" chunks as usual. We don't expect any performance penalties
because of this. The yaz_log system is still using a global log_level so
caution must be taken when modifying it with yaz_log_init_.. +
yaz_log_mask_str. This, however, should not cause any trouble because
these functions are called during initialization of application code
anyway. `yaz-config --libs  server` returns libs for server applications;
`yaz-config --libs` returns libs for non-server applications.

New OID database - with public definitions in oid_db.h. Removed old OID
database including the head oid.h and definitions such as enum oid_value
and struct oident. The new OID database uses the same string names as
before but the 'protocol' is gone. There are now only two representations
raw OID (int *) and string. Functions with prefix yaz_string_to_oid
converts from string to OID; functions with prefix yaz_oid_to_string
converts the other way.

Change to emit_term() in CQL-to-PQF query translation: when a term has
the /regexp relation modifier, do not process it for leading and
trailing "^" and "*", which have quite different meanings in regular
expressions.

Attempted fix of bug #976: Segfault in yaz_iconv. The yaz_iconv function
write handlers no longer carries a 'last' parameter. This will make
yaz_iconv flush "less" characters. A flush is performed by call to
yaz_iconv(cd, 0, 0, &outbut, &outbytesleft) .

Definition of wrbuf_diags moved to querytowrbuf.h. Function wrbuf_put_zquery
removed, because function yaz_query_to_wrbuf does the same.

API changes to WRBUF. wrbuf_free removed; replaced by wrbuf_destroy. And
wrbuf_puts no longer appends '\0'. Use wrbuf_cstr to get C-string out.

Deprecated MARC utility functions removed.

Changed prototype of yaz_marc_decode_buf: const char for result and size_t
for rsize.

Branch split: YAZ_2_1_55_branch

--- 2.1.54 2007/03/16

Fix to ZOOM-C so that transparent reconnection is properly handled on
connections that are in asynchronous mode.

Fixed compilation on OpenBSD 4.0.

Large strings in GRS-1 records are now properly displayed in yaz-client.

Added character conversion support for "advancegreek"; based on patch from
Giannis Kosmas.

Fixed yaz_iconv to return YAZ_ICONV_EINVAL if an incomplete MARC-8 combo
sequence is met. Before the error was not set so it would be unknown.

Adjust yaz-marcdump MARC reader so that it skips until record separator
is read

--- 2.1.52 2007/03/07

ZOOM-C: Removed hardcoded limit of 1024 sockets in ZOOM_event_sys_poll().
Note that ZOOM_event_sys_select() still has the limit due to the fixed-size
fd_set structure used as a bitmask for the FDs to be selected on.

Using ACX_PTHREAD macro to check for POSIX threads.

Fixed have-vsnprintf check.

--- 2.1.50 2007/02/23
 
Fixes for configure on BSD. Bug #900.

Added snprintf/vsnprintf wrappers for systems that don't have 
limits (heavens forbid).

Fixed bug in ZOOM-C's event and task handling. If a ZOOM task was
created before all previous tasks were completed and removed from the
task queue, the new task could be removed by a mistake. 

Fixed bug #615: Document retrievalInfo facilities for Frontend Server.

Implemented pass-through CQL-to-PQF conversions. Bug #861.

Fixed bug #832: Problem with MARC/charset in yaz-client.

Fixed bug #668: save command line history for yaz-client.

Fixed bug #830: pkg-config support.

--- 2.1.48 2007/01/23

Extended ZOOM result set options with two options that may be read by
a client: resultSetStatus and presentStatus with values as specified for
the ASN.1. See:
http://www.loc.gov/z3950/agency/markup/04.html#Search-status

Fixed bug #827: Using SSL fails on Debian etch.

Fixed bug #826: Weird looking chars for set of MARC records.

Implemented alternative Item Order package for ZOOM. If option "doc" is set,
that is treated as an ItemOrder with itemRequest being an XML document
external. The value of "doc" is the content.

Extended the GFS search facility. New member of bend_search_rr 
'estimated_hit_count' signals that hits is known to be an estmate
(higher or lower than real hit count). New member 'partial_resultset'
signals that the search was partial (hit count is lower or equal than
real hit count). For Z39.50, the information is stored in resultSetStatus
member of SearchResponse APDU. For SRU, the information is signalled
via SRU diagnostic 59: "Result set created with valid partial results
available".

Switched from jade/pdfjdaetex to dblatex for Docbook documentation in PDF.

--- 2.1.46 2007/01/13

Implemented bug #806: Deal with HTTP clients sending LF in HTTP headers.

Added ZOOM_connection_peek_event.

Implemented Generic select hook for ZOOM (bug #803). This is achieved with 
the following new functions:
 ZOOM_event_nonblock, ZOOM_connection_process,
 ZOOM_connection_get_{socket,mask,timeout}, 
 ZOOM_connection_fire_event_{timeout,socket}.
The existing blocking event handler, ZOOM_event, is a wrapper for the
+ blocking ZOOM_event_sys_{poll,select}.

Implemented function ccl_xml_config which parses XML version of CCL
configuration (bug #798).

Fixed bug #797: yaz_marc_write_xml does not honor character conversion.

Added timings utility (yaz/timing.h)

--- 2.1.44 2007/01/03

Added yaz_marc_write_xml which creates MARCXML/MarcXchange record as
Libxml2 tree.

Fixed bug #779: Rotation of apdu.log fails.

Fixed for character set conversions:
  Unicode to MARC-8 conversion for certain less preferred UTF-8 sequences.
  Honor G1 set in MARC-8 decoding.

--- 2.1.42 2006/12/17

Fixed bug #775: char conversion does not handle Alternative UTF-8
sequences.

Implemented function yaz_marc_read_line which parses MARC line format
records. There is a wealth of formats out there. So far, this function
reads line records produced by yaz_marc_write_line.

yaz-marcdump's options -x, -X, -I, -e have been replaced with the
more generic and easier to remember(!) options: -i format and -o format
which specifies input format and output format respectively - where
format is one of "marc", "marcxml", "line", "marcxchange".

Added 'check only' option for MARC utilities. Option -n for yaz-marcdump
does not print anything except warnings for records.

For yaz-marcdump, added support for MARC split into files (-s) with a given
chunk size (-C).

Changed the SRU update structures and codecs to reflect the SRU pre 1.0
spec, at http://www.loc.gov/standards/sru/record-update/
This has changed the binary layout of the following structs:
Z_SRW_extra_record, Z_SRW_updateRequest, Z_SRW_updateResponse and
bend_update_rr . Patch by Ko van der Sloot.

Added GFS utility function bend_assoc_is_alive which returns 1 if
association is still alive (client is connected); 0 otherwise (client
closed connection). This allows busy servers to stop working for
impatient clients.

Added ziffy: the promiscuous Z39.50 APDU sniffer. until now, ziffy has
been a separate piece of software. This version of ziffy has been modified
to fit with YAZ. ziffy is copyright Rocco Carbone and covered by GPL v2.

Fixed bug #740: Handle SRU records referring to xmlns's outside recordData.

Fixed bug #722: Allow Z39.50 Init Options to be specified / retrieved.
Client code may now interrogate options such as "init_opt_sort" to
find out whether the server claims to support various options.

--- 2.1.40 2006/11/27

Added utilities yaz_{set,get}_esn to set/get element set name from
record composition.

Removed the build of libyazthread.la. The libyaz.so is the threaded version
of YAZ and has been so since YAZ 2.1.10.

Implemented ZOOM_record_error which returns error information for
record (surrogate diagnostic).

--- 2.1.38 2006/10/31

Updates for SRU Update by Ko van der Sloot:
1. Changed name from "operation" to "action"
2. Fixed that that "recordIdentifier" was called "recordId". Kept the old
versions in the code, marked as 'backward compatible'.
3. Added diagnostics for SRU Update.

Fixed bug #709: Records are fetched in wrong format when tasks are queued.

Fixed bug #707: CQL->RPN ignores lines with leading spaces.

Fixed bug #706: XML hex encoding UTF-8 chars out of range 0-255.

For GFS, fixed problem with SRU diagnostic 'First record position out of
range' being issued for 0 hits.

zoomtst10 part of Windows Build.

--- 2.1.36 2006/10/13

Implemented yaz_filepath_comp which splits a path into file path
components (required by Zebra 2.0.3+).

Change wording of YAZ license to the 'Revised BSD License'. YAZ has used a
BSD inspired license until now so this should not have any real impact on
anybody. See http://www.opensource.org/licenses/bsd-license.php

Fixed bug #687: Missing log lines.

Fixed bug #678: CQL to PQF translation does not preserve double-quote
escaping.

Fixed bug #689: SRU diagnostics to be added.

Implemented new ZOOM function, ZOOM_connection_is_idle, which checks
whether a connection is idle (no more work do do).

--- 2.1.34 2006/10/04

Change type of optval from long to int for invocation of setsockopt with
the SO_REUSEADDR option. Thanks to Ateeq A. Altaf, Talis.

Added support for specifying the max log file size for the Generic
Frontend Server. The size is given with option -r.

--- 2.1.32 2006/09/21

Fix problem introduced in YAZ 2.1.28 WRT unix sockets in the ZOOM code.

--- 2.1.30 2006/09/17

Fixes for getaddrinfo use, Bugs #655 + #660. These bugs were introduced
in YAZ 2.1.28.

Fixed bug in Generic Frontend Server that could cause a server to stop
accepting new connections. Bug only seen on dual CPU Windows 2003 server.

For the generic frontend server, the maximum record size is used as maximum
size of incoming packages (SRU + Z39.50). The value until was previously 
only used in Z39.50 Init negotiation and, later, in a session controlled
sizes of records returned. This is controlled using -k option. It can be
specified, per server, with element maximumrecordsize in YAZ' GFS XML config.

--- 2.1.28 2006/09/04

TCP/IP comstack uses getaddrinfo now to resolve names. It should be IPV6
friendly now.

Fixed bug #644: Using Non Reentrant gethostbyname causes SIGSEGV.

New option for yaz-marcdump -lpos=value which allows setting a portion
of MARC header to a certain value.

Fixes for MARC generation when encoded as MARC-8 (bug 642, 643).

ZOOM-C reads option extraArgs. If set the value of extraArgs is appended to
SRU URI (POST/GET). Value must be URL encoded, such as x-id-a=v1&x-id-b=v2 .

--- 2.1.26 2006/08/15

Fixed problem with SRU mode type (soap, get, post) for yaz-client
and ZOOM-C.

Fixed problem another problem with ZOOM_EVENT_RECV_RECORD . Bug #626.

--- 2.1.24 2006/08/08

Fixed MARC ISO2709 encoding routines to deal with character set 
conversion.

Minor changes to GFS logging. Database included in search request log
line.

Fixes for ZOOM-C: event ZOOM_EVENT_RECV_RECORD was not generated for
cached/multiple records.

Shared libraries are built by default on Unix+configure.

Changed cql2pqf transformation to use a different evaluation order. The
new order is: always, relation, structure, position, truncation, index
and relationModifier. Old order was: always, relation, relationModifier,
structure, index, position, truncation. Note that the the latter ones
override former ones for identical attributes.. The new scheme means that
it is possible to override any existing attribute with a relationModifier.
And also that it is possible to override everything for the index rule
(except the ones listed in relationModifier). No order is perfect but this
one, we believe, covers more real cases.. The "always" should have been
called "default", since the attributes there can be overridden with all
the rest.

For Libxml2 and friends, YAZ defines YAZ_HAVE_{XML2,XSLT,EXSLT) in the
compilation phase, but also for yaz-config --cflags output. This allows
us to have public headers with Libxml2 stuff in them . It should also,
eventually, make Libxml2 checks redundant in packages using YAZ, such
as yazproxy.

--- 2.1.22 2006/06/15

Changed SRU update structure bend_update_rr so that SRU diagnostics are
stored in uri, message and details.. Previously diagnostics were stored
in errcode, errstring. Patch by Ko van der Sloot. Breaks binary
compatibility.. but he's probably the only one affected, so.

Added support for CCL, compiled on the client side, in ZOOM-C.  This
is invoked using ZOOM_query_ccl2rpn() with the CCL configuration as
input; the resulting query objects can be used for for searching with
ZOOM_connection_search() and scanning with ZOOM_connection_scan1().

YAZ' configure searches for OpenSSL by default.

SSL comstack uses SL_CTX_use_certificate_chain_file rather than
SL_CTX_use_certificate_file. See
http://lists.indexdata.dk/pipermail/yazlist/2006-June/001615.html
for more info. Thanks to Ko van der Sloot.

--- 2.1.20 2006/06/02

Bug #600: SRU GET, POST support for yaz-client. Introduced
command 'sru' which selects method SOAP/GET/POST.

Allow missingValueAction to be specified for the sortspec string - 
function yaz_sort_spec. By default, the missing value action is null.
Use ! to specify "abort". Use = followed by stringvalue to specify default
value.

Ensured that Present-handler (if defined) is called in GFS before any call to
fetch-hhndler.  This now includes piggy-backed presents as well as SRW/U
searchRetrieve requests.

Documentation for YAZ is now based on the Docbook XML/XSLT using
xsltproc + N Walsh's stylesheets. It means that the CVS version of YAZ
is no longer depending on jade/openjade or docbook-to-man scripts.
PDF is no longer part of the distribution - but can optionally be
made using DSSSL/jadetex or FOP.

Added retrieval handling support in Generic Frontend Server to support
conversion between MARC/XML as well as XSLTtransforms. See
etc/yazgfs.xml for an example.

Added Authentication support to Generic Frontend Server in SRU
mode. Authentication using HTTP Basic is supported, as is the use
of 'x-username' and 'x-password' parameters in the request itself.

Added support for a new character set MARC8s identical to MARC8 except
that it converts combined characters to single Unicode characters in the
Latin-1 range (when possible).

--- 2.1.18 2006/04/24

ASN.1 compiler 0.4: generates brief Doxygen file header for 
generated .h/.c files. 

Utility yaz_iconv now supports conversion to MARC-8.

New facilities for the MARC module. The reading - and writing of
content are separate methods for the yaz_marc_t handle. The following
read functions are available: yaz_marc_read_iso2709 (Reads MARC in
ISO2709 format), yaz_marc_read_xml (reads MARC in MARCXML/MarcXchange
format). Write functions have prefix yaz_marc_write_.. The existing
utilities yaz_marc_decode_wrbuf and yaz_marc_decode_buf are still
available. Removed support for OAI-MARC and simplexml (not the
simplexml from PHP5).

Added a new ZOOM event type ZOOM_EVENT_END which signals no more events
to be returned for this connection.

--- 2.1.16 2006/03/31

Allow multiple languages and charsets to be specified with
yaz-client. Each item must be separated by comma (NO BLANKS). E.g.
  negcharset iso-8859-1,utf-8

Translation of proximity nodes from CQL into PQF now works.

Moved to automake 1.8, 1.9.

Added function yaz_log_set_handler which allows a log handler to be
installed. This handler will be called for all log messages.  Output
to file is also produced; but that can be disabled by passing NULL
fname to yaz_log_init_file.

Fixed another problem with MARC-8 -> ISO-8859-1 conversions. Bug #537.

For SRW (including GFS), accept application/soap+xml as content-type
for SOAP msg.

For GFS in SRU mode, an empty stylesheet in SRU URL (&stylesheet=&)
produces NO stylesheet reference even if a default stylesheet is specified
in GFS XML config.

--- 2.1.14 2006/03/14 

Updated Windows package to include yazd.dll + yazd.lib for the
Development component.

If the environment variable YAZ_LOG is set, then it is used as a
string indicating the default level of logging to use if not
overridden by calls to yaz_log_init() or yaz_log_init_level().  If
it's not defined, then the manifest constant YLOG_DEFAULT_LEVEL is
used as before.  So, for example, to omit warnings from YAZ logging,
	export YAZ_LOG=-warn

cql_transform() now map structure and other attributes before indexes,
so that index-specific structures and other attributes can override
defaults.  So now a combination of mapping specifications such as:
	structure.* = 4=1
	index.dc.date = 1=date-modified 4=5
does the right thing.

cql_transform() now also respects the "always" mapping specification,
which establishes an initial set of attributes to be used for all
terms except where overridden by more specific attributes associated
with the index, relation or modifier.

Added SRU-GET and SRU-POST support for ZOOM C. Option "sru" specifies
which mode to use; one of "post", "get" or "soap" (SRW, default).

Fixes for yaz_iconv routines: changed trie-based character set conversions
to use only non-negative values for bit fields due to Sun's C compiler not
supporting negative values.

Fixed bug in character set conversion yaz_iconv. Some three byte UTF-8
sequences where not read correctly. Fix by Rustam Usmanov.

Updated win/makefile to use options, settings which makes things
compile with VS C 2005.

--- 2.1.12 2006/02/01 

Fixed bug in yaz_oi_update which used incorrect value for categoryValue.

In ZOOM socket code, use select instead of poll on MacOSX.

ZOOM-C now support client-side compilation of CQL into RPN that is
sent to the server, enabling CQL to be used against all Z39.50
servers.  Use ZOOM_query_cql2rpn() to set the compiled CQL into a
ZOOM_query object, and submit it using ZOOM_connection_search().
The CQL-to-RPN translation uses a configuration file, the name of
which must be specified in the Connection's "cqlfile" option.

ZOOM-C also support CQL scanning, via the new ZOOM_connection_scan1()
function, which takes as its start-term parameter a ZOOM_query object
(which may have had either CQL or RPN set into it).


--- 2.1.10 2005/11/29 

Added ZiNG Update Support. New codecs are defined in srw.h. Extended the
GFS to support this as well. Backend handler, bend_srw_update, does the
update work. Code contributed by Ko van der Sloot.

Allow retrieval of Search Result-1 information in ZOOM by the use of
options that are attached to a result set. ZOOM documentation updated
accordingly.

Fixed bug #416: First/second comb characters not handled in the MARC-8 to
UTF-8 conversion. Patch by Raj Patel.

Added option -m to GFS to control formatting of timestamps in log file.

Added 'exit' as synonym for 'quit' in yaz-client

Added support for specifying SRW resultSetId + resultSetIdleTime in a
Generic Frontend Server's search handler. Refer to include/yaz/backend.h
for the new members. Patch by Ko van der Sloot.

Added support for SRU POST. It is supported for content-type
application/x-www-form-urlencoded only. Patch by Ko van der Sloot.

Do not build the separate Multi-threaded (MT) library libyazthread.la.
Instead make the library libyaz.la multi-threaded. Threading as a whole
can still be disabled by configure option --disable-threads. Previosly, 
with older GLIBCs there were problems with MT libs under Apache. This
has now been fixed a long time ago.

Fixed bugs in yaz_log that occurred on Sparc Solaris in Multi-threaded
applications.

CQL module modified to be case insensitive for relations/indexes/operations.

Fixed bug in CQL transform code: incorrect value relationModifieder
was used.

Added 'show all' command for yaz-client which retrieves all results
for last search.

Added new yaz-client, xmles, which takes a (private) OID and
a document to be sent as an extended service request.

Describe new yaz-client commands wait_response and set_auto_wait.

Increase TCP/IP listener backlog from 3 (which I am guessing was
copied from the SunOS manual entry way back when) so SOMAXCONN, so
that the socket will queue as many incoming connections as it's able
to handle ongoing connections.  In other words, it will never now
refuse a connection that it would be able to handle merely because
it's not got around to accepting() enough of the pending connections
yet.  This is the behaviour anyway under Linux, where the listen()
argument is ignored; but not under BSD and on systems such as
MS-Windows that use BSD-derived TCP/IP stacks.  The behaviour of
YAZ-based servers should now be uniform across operating systems in
this respect.

yaz-marcdump uses 64-bit file access on some systems. This is enabled 
on Linux and other Unix variants where _FILE_OFSET_BITS=64 is supported.
This allows yaz-marcdump to read large MARC batches (>2 GB).

Modified all YAZ source files - except the source which is auto-generated
by tools - to use spaces rather than TABS. Emacs/VIM trailer added to
all source files.

Add ZOOM_connection_option_getl() and ZOOM_options_getl(),
corresponding to the existing *_setl() function.  These allow option
values containing arbitrary valuues.

Add ZOOM_resultset_sort1(), which should ALWAYS be used in place of
ZOOM_resultset_sort() in new applications.  Its behaviour is identical
except that it returns an indicator of whether or not the sort
criterion was accepted (0 for OK, -1 for invalid).

--- 2.1.8 2005/06/07 

Fixed bug in yaz_marc_decode_buf. By mistake the routine appended
MARC output rather than returning "new" buffer.

yaz-client warns about unknown init options.

Fixed bug #371: "options concurrentOperations ignores concurrentOperations"

--- 2.1.6 2005/05/24 

Added support for SRW sort in Generic Frontend Server. Patch
by Ko van der Sloot. Member srw_sortKeys in bend_search_rr holds
sortKeys - or NULL if none is provided.

Fixed bug #307: It was impossible to specify indefinite/no timeout
for ZOOM_event. Special timeout value -1 now means indefinite timeout
(i.e.  no timeout).

Added support for multiple languages and charsets to be specified in
ZOOM. Each charset/language is separated by a blank. If negotiation is
in effect in init-response, Option
"negotiation-charset-in-effect-for-records" set to 1(true) or 0(false). 
Code based on patch by Vasiliy Osadchuk.

Fixed bug #306: infinite recursion that occurred when calling
yaz_log_level_init as the first call (before other log level or
nmem_init calls)

Fixed bug in scan handling in front end server: if preferred-Position-In-
Response was non-present, a NULL pointer referece was performed.

--- 2.1.4 2005/04/26 

Changed include/yaz/diagbib1.h and added include/yaz/diagsrw.h with
diagnostic messages+codes for Bib-1 and SRW. Preprocessor defines are
now defined for all those error codes. So instead of putting 109 in
your program you'd use YAZ_BIB1_DATABASE_UNAVAILABLE. The messages
are generated from a .csv - file. See src/bib1.csv and srw/srw.csv.

Modified the yaz-marcdump utility to skip garbage bytes between MARC
records in a file.

Fixed bug - uninitialized memory - due to bad code for fix of bug #272.

Program yaz-client now exits and produces an error message if multiple
Z39.50 servers are specified on the command line (none or one allowed
only).

Program yaz-marcdump skips garbage bytes between ISO2709 records rather
than abort.

--- 2.1.2 2005/03/16 

Fixed bug #273: Update for recent MARC-8 -> UNICODE changes. 

Fixed bug #272: Preserve spacing for CCL terms.

--- 2.1.0 2005/03/14 

Added support for virtual hosts and multiple backend servers for
the YAZ frontend server. The configution is XML based and
support specificition of CQL to RPN mappings and explain information.
See section "Virtual Hosts" in the YAZ manual.

Extended OPAC display utility. OPAC display utility renders
bibliographic (MARC) record as well. Added yaz_opac_decode_wrbuf
to supplement yaz_marc_decode_wrbuf.

Fixed a bug in MARC decoder that could caused it to crash for some
invalid MARC records. More diagnostics and warnings where added in
XML output (warnings, etc are stored in comments).

--- 2.0.34 2005/02/08 

Fixes for UNIX domain sockets. Bug #261.

Fixes for MARC-8 to UTF-8 conversion. Bugs #258 and #260.

Fixed bug #263: YAZ MARCXML dump shows extra spaces after control fields.
Added yaz_marc_subfield_str which defines subfield lead string which is
used in YAZ_MARC_LINE format. Default string is blank+$. Added
yaz_marc_endline_str which defines end of fields string used in
YAZ_MARC_LINE format. Default string is newline.

Experimental support for MarcXChange. This format can be produced
by yaz-marcdump and is implemented in yaz_marc_decode - functions.
 http://www.bs.dk/standards/MarcXchange.xsd

Added yaz-client commands scansize that sets maximum number of
entries to be returned by scan.

--- 2.0.32 2005/01/11 

Added support for SRW scan in yaz-client and Generic Frontend Server.

* Added whereInList member to SRW Scan Term.

* Changed Z_SRW_scanRequest to be able to carry both CCL and PQF.

Fixed NMEM system to return aligned blocks on the smallest boundaries
that are suitably aligned for all possible types on the particular
architecture YAZ is being built for.

--- 2.0.30 2005/01/04 

Fixed numerious warnings that was issued with newer versions of GCC.

Fixed NMEM system to return aligned blocks on 8 byte boundaries rather
than 4 bytes, since 4 may not be enough on some systems such as GCC 3.4.3
on Solaris.

Make YAZ Generic Frontend Server slightly faster.

Enhance (and reduce) logging for Generic Frontend Server.

Revert YAZ log system so that it flushes every write operation
by default. (YAZ 2.0.26 and earlier verisons did that). Bug #240.

Modified the YAZ logging system. The LOG level defines use YLOG_ prefix
instead of LOG_, due to name clash with syslog(3). LOG_ are still
present. New applications should define YAZ_USE_NEW_LOG=1 - this
will effectively disable old definitions.

--- 2.0.28 2004/11/09 

Added yaz_log_time_format which specifies log format using
strftime(3).

Added yaz_log_module_level which returns mask for a module. Value
is non-zero mask a if module is enabled; zero if disabled.

* Fixed bug #148: CQL parser may leak. A few prototypes were changed
in include/yaz/cql.h.

Fixed bug #176: Dont throw diagnostics on empty SRU args.

Fixed bug #175: surrogate diagnostics in SRW lacking NS.

Fixed bug #172: RPM builds does not enable SSL.

Doxyfile.in part of dist. Doxyfile generated by configure.

Configure aborts if any of --with-xml2, --with-openssl, --enable-tcpd 
are given and the corresponding component does not exist.

Extend CCL documentation in YAZ reference. Describe r=r.

--- 2.0.26 2004/10/01

Fixed MARC->MARCXML conversion to properly deal with
fields, subfields, indicators having non-ASCII characters.

Fixed MARC->MARCXML conversion so that ASCII control characters
except TAB,CR,LF are removed from resulting XML (XML 1.0 does not
support these).

Added YAZ GFS support for conversion from Z39.50 surrogate
diagnostics to SRW surrogate diagnostics.

Bug fix: YAZ GFS did not return schema in explainResponse.

--- 2.0.25 2004/09/30

The YAZ GFS when converting SRW/SRU requests to Z39.50 structures
now converts recordSchema to elementSetName as well as schema URI.

Fixed bug in COMSTACK that prevented HTTP request packages from being
decoded properly.

--- 2.0.24 2004/09/29

Added CCL facility r=r "range" which is similar to r=o "ordered" but
does not require white-space before and after the dash in a range, e.g.
x=-1990 is equivalent to x <= 1990 iff r=r, but equivalent to x= -1980
iff r=o.

Fixed a few AC_TRY_LINK configure tests that did not operate properly
due to new GCC removing "redundant" code.

Added yaz-client commands scanpos and scanstep that sets preferred
position and step-size for scan.

Macro YAZ_INIT in yaz.m4: option --with-yazconfig renamed to --with-yaz.

Added CCL utility ccl_qual_buf which parses one or more CCL 
spec lines in a buffer.

Added CCL utility ccl_qual_line which adds CCL qualifier line consisting
of name and value - ignoring empty lines and comments.

On Windows, the debug DLL/import lib is now named yazd.{dll,lib}.

Added odr_get_element_path which returns current element path for an
ODR handle. This utility is useful in error handling or user-defined
ODR_PRINT stream.

Added ODR_PRINT utility odr_set_stream which is is a more generic
alternative to odr_setprint. odr_set_stream takes a stream handle, pointer
to a write function and pointer to close function. The close function - if
non-NULL - will be called during odr_destroy.

Fixed bug in CCL parser where truncation char was not removed from
right side when truncation=both was in effect.

Fixed CQL parser to use unsigned chars for isxxx from ctype.h due
to VS.NET.

--- 2.0.23 2004/08/11

Fix buffer overrun in CQL parser when dealing with proximity (%).

Fixes for MARC-8 in yaz_iconv character set utilies. The MARC-8
to UTF-8/UCS conversion is now only based on codetables.xml.

yaz_marc_decode_buf sets leader pos 9 to "a" for MARCXML output.

--- 2.0.22 2004/08/06

Add support for more "commit changes" in ZOOM (uses Extended Services).

For yaz-client, command set_marcdump <file> / -m <file> dumps SUTRS/XML/..
records as well.

Yet another small fix for configure of SSL.

--- 2.0.21 2004/05/14

Fix SSL libs for configure when --with-openssl=DIR is given.  

--- 2.0.20 2004/05/10

Add autoconf m4 macro YAZ_DOC for YAZ documentation setup (docbook).

SSL comstack now uses yaz.pem certificate file on server side
by default. Certificate filename can be configured by calling
comstack function cs_set_ssl_certificate_file before cs_bind is used.

Fix bug regarding multiple calls to ZOOM_connection_connect.

Implement cs_set_ssl_ctx which sets SSL_CTX for SSL comstack.

Do not create SSL_CTX in cs_create (ssl_type). Create in tcpip_bind,
tcpip_rcvconnect instead. This allows user to set custom SSL_CTX.

ZOOM now allows inspection of X509 peer certificate for verification.
The X509 buffer is retrived by reading ZOOM option "sslPeerCert".

Removed libyazssl.la. When SSL is enabled, libyaz.la has SSL support and
all programs have too (yaz-ztest, yaz-client, zoom..). May not be
as "modular" but it simplifies things.

Added cs_get_peer_certificate to that returns peer X509 PEM.

Added cs_get_ssl that returns SSL handle (SSL *) for SSL comstack; returns
NULL if SSL is unavailable.

Documentation about MARC decoding tools.

Fix --disable-tcpd to really disable tcpd. Patch by Robin H. Johnson.

--- 2.0.19 2004/03/30

Rename CHANGELOG to NEWS to follow GNU style packing.

Fix bug with missing initialization of member in init_diagnostics.
This bug affects threaded version of GFS server.

--- 2.0.18 2004/03/20

Use wrbuf_xmlputs_n instead of wrbuf_write_cdata to avoid clash with
Zebra symbol.

Ensure zlib.dll is packed with Windows install.

--- 2.0.17 2004/03/17

Fix encoding of xsd:string to use text instead of CDATA.

Fix endless loop in CQL parser with unbalanced ".

Use a more compact way to store MARC-8 conversion tables.

--- 2.0.16 2004/03/16 Debian only

Oleg Kolobov Fixed a bug in yaz_iconv regarding conversion to
UCS4 / UCS4LE.

Update CQL parser to use new CQL 1.1 modifiers for booleans and
relations.

Add CQL test cases.

--- 2.0.15 2004/03/01

Another fix for decoding of XML packed records.

--- 2.0.14 2004/02/25

Fixes for Chunked encoding. White space not ignored after length spec.

Update NS and use default NS for SRW diagnostic elements.

--- 2.0.13 2004/02/23

Implement ZOOM_resultset_cache_reset which resets record cache.

Implement ZOOM_resultset_sort which sorts a result set.

Implement chunked HTTP transfer.

For SSL, use -lssl -lcrypto on systems that don't have pkg-config.

--- 2.0.12 2004/02/16

Added member 'schema' to bend_explain_rr structure so that backend
can specify explain record identifier. Defaults to Zeerex 2.0.

Fix encoding of OID's of form 1.0.X. Bug introduced in 2.0.11.

--- 2.0.11 2004/02/16

* SRW/SRU 1.1 updates: updated diagnostic in srw.h to use uri instead
of code.

Added init command for yaz-client which sends "extra" init request.

Fixed two bugs in OID codec - ber_oidc. Throw error when encoding/decoding
bad truncated OID. Fix decoding of OID X.Y... when X=2 and Y>39.

Fixed a bug in ASN.1 compiler that caused Type-1 Operator codec to fail.

Make ZOOM error code for "invalid query".

Fixed compilation for SSL which wasn't properly enabled for all platforms.

--- 2.0.10 2004/02/05 

For yaz.m4, allow second argument for YAZ_INIT to hold minimal version of
YAZ required.

* SRW/SRU 1.1 updates. Diagnostic code now a URI.

Added option -p <file> to make Generic Frontend Server to write PID file.

Added option -D to put Generic Frontend Server in background on its own.

Make ZOOM C recognize option "password". If unset, "pass" is used
(for backwards compatibility).

Fixed a bug in Generic Frontend Server that could make it crash if a
client sets characterSetNegotation bit, but didn't pass negotiation stuff
in InitRequest.

New YAZ client command, zversion, that sets Z39.50 version (1,2,3..).
Must be issued before open, in order to be in effect.

--- 2.0.9-6 2004/01/12  Debian/Windows

Make the SRU server more picky WRT unknown params, etc.

Bug fix: ZOOM scan response didn't return displayTerm - when present.

New YAZ client command, options, that sets Z39.50 options.

New utility functions yaz_init_opt_{encode,decode} to encode/decode Z39.50
options from a string of tokens (one token for each option bit).

Update SRW diagnostic code messages.

--- 2.0.9-5 2004/01/07  Debian/Windows

Handle user defined stylesheet for SRW/SRU.

--- 2.0.9-4 2004/01/06  Debian/Windows

Fix bug in decoding of Content-Length.

--- 2.0.9-3 2004/01/06  Debian/Windows

Fix a bug with decoding of XML packed records.

--- 2.0.9-2 2004/01/05  Debian only

Allow empty ODR (NMEM=0) for odr_oiddup and odr_getoidbystr.

Fix bug in SRW/SRU diagnostics decoding.

--- 2.0.9 2004/01/05

Fixed bug in Generic Frontend Server which could drop records exceeding
preferred message size. Reported and fixed by Irina Dijour.

Fixed calculation of package size for structured records in Generic
Frontend Server. Reported and fixed by Irina Dijour.

Fixed namespace for SRW/SRU diagnostics.

Fixed SEGV in yaz-client that occured for HTTP connection errors.

--- 2.0.8 2003/12/22

* SRW/SRU 1.1. Since the Namespace has changed for SRW/SRU, it means that
this version is incompatible with version 1.0 and older YAZ SRW/SRU
implementations.

CQL changes to reflect recent changes to the specification:
* Documentation talks about context sets instead of index sets.
* Documentation talks about indexes instead of qualifiers.
* The CQL-to-PQF transformer's configuration file now uses
	"index.set.name = <attributes>" instead of the old form
	"qualifier.set.name = <attributes>".  (Both forms are still
	understood but the latter is deprecated.)
* CQL terms with no explicit index specified are now interpreted as
	cql.serverChoice instead of srw.serverChoice (which of course
	behaves exactly the same.)

--- 2.0.7 2003/12/16

MARC conversion can now generate ISO2709 output in another
character set. yaz-marcdump uses this facility if you invoke it
with option -O.

Added missing C decl macros for include/yaz/{soap.h,srw.h,cql.h}, so that
functions from there can be used from C++.

--- 2.0.6 2003/12/04

Frontend server now transfers memory from decoded packages to stream
ODR for search.

NMEM now clears freed blocks with 'Y' (hex 59) to force bad memory
references to show up. 

ZOOM-C now supports standard ZOOM option names as described in v1.4 of
the ZOOM Abstract API.  The older names for the same options are still
also supported for the benefit of old applications.

ZOOM-C supports "implementationId" and "implementationVersion" options
to go along with "implementationName".  These allow the user code to
specify identification strings to be sent to servers.
Add OID for the new ExtLite attribute set.

Add OIDs for NACSIS-CATP, FINMARC2000 and MARC21-fin record-syntaxes,
 as requested/supplid by Ere Maijala <ere@atp.fi>

For generic frontend server, reverse the order of
"toolkit-supplied / application-supplied" strings sent as implementationId,
Name and Version.  Also, remove the spaces around the slash.  This brings
the GFS in line with the behaviour of ZOOM-C on the client side.

Add function ZOOM_scanset_display_term.

yaz-client shows scan displayTerm if present.

Utility yaz-iconv is now installed by default along with the man page 
yaz-iconv.1.

Extend configure check for OpenSSL to use pkg-config where available (such
as RedHat 9).

Incorporate patch by Morten Bogeskov which allows a Unix file socket
server to specify uid/gid/mask for socket using the format
 unix:[user=uid,][group=gid,][umask=mask,]file=path
If file= is omitted the existing format is assumed, e.g.
 unix:path
in which case the mask is 0666 (rw for everybody).

Major restructure of YAZ source. All source in libyaz is in src directory.
Programs in client (yaz-client), ztest (yaz-ztest), zoom (zoom programs),
util (utility programs such as ASN.1 compiler, yaz-marcdump). 

Added man page for utility yaz-marcdump (used to be called marcdump).
yaz-marcdump is installed by 'make install'.

Fixed a memory leak in Generic Frontend Server that occurred when decoding
of incoming package failed.

Fixed a potential DOS attack vulnerability in COMSTACK/ODR.

Change prototype of odr_perror: add const to message string.

New function yaz_log_reopen which reopens log file (for log rotate, etc.)

* Blocking parameter for COMSTACK cs_create is now a bit mask rather
than a blocking flag. Bit 0 is set for blocking, reset for non-blocking.
Bit 1 is set if cs_addrstr should avoid DNS lookup; reset for full
DNS lookup. There should not be any compatibility problems with this
assuming that blocking=1 or 0 is used.

Fix bad reference in UNIX comstack in function cs_addrstr.

Fix for compilation on AIX.

The generic front-end server (server/seshigh.c) now supports returning
Init diagnostics to the client in User-information-field, in
accordance with Z35.90 Implementor Agreement 5 (Returning diagnostics
in an InitResponse)

--- 2.0.4 2003/09/04

Allow any CQL relation (not just all,any,exact,scr).

Fixes for OCLC UI ASN.1 to make it work with SilverPlatter targets
that features the same UI.

Implemented command update0 in YAZ client which is equivalent to
update but uses old of Ext Update ASN.1.

Use OID 1.2.840.10003.15.1000.81.1 for privately defined charsets
in charset negotiation. Added VAL_ID_CHARSET in oid.h.
Previously no OID was used for this info.

ZOOM uses smallSetUpperBound=1 instead of 0 for piggyback searches.
It apparantely upsets EBSCO Publishing IR Z39.50 Server which
returns 'malformed search term' otherwise.

SortResponse member resultCount now set to NULL in sort handler of
frontend server.

OPAC support ZOOM. ZOOM_record_get returns OPAC info (as XML) if
type is "opac".

Add three new utility functions for translating OIDs between various
formats -- symbolic name such as "Usmarc", minus-1-terminated int
arrays and dotted strings such as "1.2.840.10003.9.5.1":
 int *oid_name_to_oid(oid_class oclass, const char *name, int *oid);
 char *oid_to_dotstring(const int *oid, char *oidbuf);
 char *oid_name_to_dotstring(oid_class oclass, const char *name, char *oidbuf);

Reverted modifications for ES Update definition for z_IU0Update 
(OID 1.2.840.10003.9.5.1 and 1.2.840.10003.9.5). The definition
is back to YAZ 2.0.2.

String value attributes for CCL parser.

Support for OCLC's locally registered "OCLC-UserInformation" PDU,
which their FirstSearch server returns in Init responses, sometimes
carrying useful diagnostic information when Init fails.  This has the
OID 1.2.840.10003.10.1000.17.1 and is defined in the file
"z39.50/oclcui.asn", where its definition is somewhat different from
what OCLC document on their web-site, as required to interoperate with
their servers.

Support for anonymous authentication in yaz-client.  Use the command
"auth -".

* Fix the OID of the Index Data-local "admin" Extended Service from 
  1.2.840.10003.9.81.1 to 1.2.840.10003.9.1000.81.1.  The omission of
  the 1000, which indicates a locally-defined OID, was a mistake.

--- 2.0.3 2003/06/20

Fix CCL directive @case handling so that it affects string match for
both CCL keywords and qualifiers.

* ESFormat-Update updates. Packages with OID 1.2.840.10003.9.5.1 and
1.2.840.10003.9.5 are now handled by the same decoder z_IU0Update .
Decoder has been updated with ASN.1 changes as listed in
http://lcweb.loc.gov/z3950/agency/defns/updateES.html
Note that the "latest" DB Update, OID 1.2.840.10003.9.5.1.1 , handler
z_IUUpdate, remains unchanged. 

ZOOM_record_get may now return a record in a specific character set.
For type use "form; charset=from[,to]" where form (render, xml, ..) ,
"from" is the character set of record as returned by target. "to" is
the character set to be returned. If omitted, "to" is UTF-8.

YAZ ASN.1 compiler renamed from yaz-comp to yaz-asncomp

New ODR utility, odr_getelement, which returns name of element for
which encoding/decoding failed.

Fixed ODR so that it returns error code OREQUIRED rather than ONONE
in cases where a required element was omitted.

Bug fix: some MARC8 sequences were not converted.

New ZOOM option "step" which specifies number of records to be
retrieved in one chunk. Used in conjunction with "start" and "count".

SRW support for yaz-client. Use scheme http: to use it, e.g.
 http://host:port/db

yaz-client no longer does (un)intelligent character set conversions
by default. Can be enabled with charset and marc_charset commands.

xmalloc trace fix for 64-bit systems such as DEC alpha. 

Solaris 2.6 compile fix.

New function, cql_strerror() translates SRW error codes, as returned
by cql_transform_error(), into human-readable English strings.  Used
in yaz-client diagnostics when appropriate.

New CQL2RPN query-type for the command-line yaz-client, parses CQL and
converts it into a type-1 query which is sent to the server.  This
makes CQL available for use with all Z-servers, as opposed to the tiny
minority that can handle CQL queries themselves.

--- 2.0.2 2003/04/28

New Debian package layout similar to the Redhat Package layout.

New ZOOM events ZOOM_EVENT_RECV_{RECORD,SEARCH} for receiving a record
and search result respectively.

--- 2.0.1 2003/04/25

Redhat package is now several packages: libyaz (runtime libraries),
libyaz-devel (development and documentation, and yaz (utility programs).
Package spec file by Morten Bogeskov.

New member 'schema' in struct bend_fetch_rr which the name of requested
schema (SRW/SRU) for record (or NULL if none was given). The fetch
handler MAY set this to reflect the schema of the returned record.

New member 'display_term' in struct scan_entry. GFS now sets member entries
and allocates scan entries to be filled by user scan handler. In previous
version, entries member was allocated by the scan handler. That still works,
but the GFS will ignore member display_term - assuming it was NOT set by
the handler. The fact that the GFS now allocates the entries both allows
for new members and makes a scan handler easier to write.

Fix CQL lex buffer overflow.

SRW/SRU recordPacking. For SRW default recordPacking is string. For
SRU default recordPacking is string.

SRU protocol support for frontend server.

Fix compile bug for systems that have nl_langinfo but CODESET undefined.

Added missing PQF transform rules for <= and >= . Thanks to Peter Popovics.

Added scan for the ZOOM shell (zoomsh).

--- 2.0 2003/02/23

* String Identifers for Schemas (Amendment 5).
http://lcweb.loc.gov/z3950/agency/amend/am5.html
Old definition for schema
  Odr_oid *schema; /* OPT */
New:
  int which;
  union {
     Odr_oid *oid;
     Z_InternationalString *uri;
  #define Z_Schema_oid 1
  #define Z_Schema_uri 2
  } schema; /* OPT */

* resultCount parameter to Sort Response (Amendment 1).
http://lcweb.loc.gov/z3950/agency/amend/am1.html

Support for SRW 1.0 over HTTP. This is an optional feature and
requires libxml2 to operate. Enable SOAP by specifying --with-xml2
for configure.

Generic frontend server supports HTTP/SOAP/SRW and Z39.50/BER
on the same port.  SRW SearchRetrieveRequests are mapped
to bend_init,bend_search,bend_fetch,bend_close. 

Z39.50 Query Type-104 added - to facilitate CQL within Z39.50.

CQL support. Source is directory 'cql'. CQL is supported in ZOOM
(both SRW and Z39.50) and the YAZ client (Z39.50 only).

ZOOM connections are SRW based if schem http is used for hostname
in connect, e.g.  z = ZOOM_connection_new("http://myserver");
ZOOM_query may be of type CQL, e.g. ZOOM_query_cql(q, "dc.title=x");

CCL proximity operators !n, %n converts to PQF @prox 0 n 1 2 k 2
and @prox 0 n 0 1 k 2 respectively, meaning: exlusion=false,
distance=n, order=true/false, relation=le, prox unit=word. If
n is omitted, distance 1 is used.

Fixed problem with C compiler include path in wrong order.

For TCP/IP COMSTACK, set recv buffer to an appropriate "large" value
on Solaris. Patch from Ko van der Sloot.

New MARC decode API. All new functions operate on a yaz_marc_t
handle. The most important new functions are: yaz_marc_create,
yaz_marc_decode_{buf,wrbuf}, yaz_marc_destroy, .. to create handler,
decode and destroy respectively. Decoder can produce formats
MARC line, simple XML, OAI MARC and MARC XML (LoC). See
include/yaz/marcdisp.h.

YAZ Iconv utility now supports MARC8 decoding (marc8.c). Converts
to UTF-8, UCS-32, wchar_t or Latin-1.

* Prototypes for yaz_iconv_-functions moved to separate header 
include/yaz/yaz-iconv.h.

Make a few private functions 'static' in unix.c. This prevents
duplicate unix_close in PHP with YAZ and imap. PHP Bug 20977.

For ZOOM connection, the options targetImplementation{Id,Name,Version}
are set when Init Response is received.

New function ZOOM_connection_error_x similar to ZOOM_connection_error
but returns diagnostic set as well.

New function yaz_strerror which is a portable wrapper for
strerror/strerror_r/GetLastMessage.

* ZOOM_record_get supports type "xml" in which case MARC XML (from LOC)
is returned for MARC. If type is "oai", then OAI MARC is returned.

Fix creation of lib/yaz-config so it works if srcdir != objdir. Patch
from Kang-Jin Lee.

--- 1.9.2 2002/11/26

yaz_marc_decode uses OAI MARC as XML format for ISO2709 records.

Fix bad race conditions on SIGTERM and terminate gracefully in
frontend server.

Move retrieval (data1) module to Zebra since nobody seems to be
using it.

Add GRS-1 render for ZOOM using same format as yaz-client.

--- 1.9.1 2002/10/05

Added man pages: yaz-client(1), yaz-ztest(8), yaz(7), zoomsh(1).

Fix broken ESpec handling in data1 module.

SGML reader parses comments and makes them part of the data1 tree.

Added several type casts so that YAZ compiles as C++ code.

ZOOM didn't handle PDU encoding failures properly.

Added more Bib-1 diagnostics (approved extensions).

GNU configure: better check for iconv.

More portable use of accept, getpeername. Check for socklen_t. Use
int/size_t if socklen_t is not defined.

--- 1.9 2002/09/06

PQF parser rejects bad queries - including those with extra
characters in them. PQF parser used to silently ignore that.
Cleaner API for PQF added, which allows you to get detailed
error information for bad queries (see yaz/pquery.h).

Fixed bug in ZOOM_record_get for type "database".

Implemented mini iconv library supporting conversions between
UTF-8, UCS4, UCS4LE and ISO-8859-1. Implemented in util/siconv.c.

* Removed XML reader (d1_expat.c). It's part of Zebra instead.

--- 1.8.9 2002/08/20

Fixed ZOOM C record cache so that preferredRecordSyntax and
elementSetName is used to check for already fetched records.

--- 1.8.8 2002/08/02

Added three members in bend_initrequest structure to facilitate
character set negotiation.

Fixed a bug in frontend server that could cause indefinite
loops under rare conditions. 

Revised character set utilities (charneg.h) so that encoding
UCS-4, UCSA-4, UTF-16 and UTF-8 are encoded non-privately.

For PQF, directive @term <type> sets term type for Scan/Search.
Here <type> is general, string, numeric, null. The term type
is inherited - just like @attr.

New call odr_set_charset that sets character set conversion for
international-strings on a ODR stream. Prototype is:
 int odr_set_charset(ODR o, const char *to, const char *from);
The InternationalString is still represented as C string in YAZ 
so native strings of type UTF-8, ASCII, etc. will work (UTF-16
won't). On the protocol level, you can use any encoding.

Support for UNIX sockets in ZOOM.

Solaris recv sometimes returns errno == ENOENT. It is treated as
EINPROGRESS. COMSTACK patch by Ko van der Sloot.

New COMSTACK of type UNIX Socket. Use "unix:/path" as address for
both client and server. Code by Morten Bogeskov.

--- 1.8.7 2002/05/22

On Windows ZOOM functions are of type __stdcall rather than __cdecl, so
that they can be used directly from Visual Basic. You must recompile
your windows APP if you're using ZOOM.

Character Set and Language Negotiation(3) for ZOOM API and YAZ client.
Commands "lang" and "charset" sets language and character set respectively.
Options "lang" and "charset" is interpreted by the ZOOM API. Note, these
are not part of the official ZOOM spec) All is due to Oleg Kolobov. 

Attributes from multiple CCL fields may be OR'ed rather than merged
using directive "@field or". Fields are still merged by default -
equivalent to "@field merge".

Fixed bug in ZOOM connect that occurred on OpenBSD (maybe others). Patch
by Oleg Kolobov.

Fixed bug in zget for parameter ExtendedServicesResponse.

Fix OID for ILL.

--- 1.8.6 2002/03/25

Added PQF feature: '@attr type=value' may be written as '@type=value'.

Client displays USR.1:SearchResult-1 (hits per term).

Additional Search Info for search in Generic Frontend Server.

Fixed CCL parsing of "field=s".

WIN32 installer - using the excellent NSIS software from nullsoft.

Fixed CCL parsing of "field = - <number>".

Added function yaz_marc_decode that decodes MARC for line mode
display or XML (similar to that used by JZKit).

Fixed BER decoding of OPTIONAL CHOICE. The bug didn't affect the
Z39.50. But ISO/ILL was, however.

Added patch by Rustam T. Usmanov that implements Z39.50 duplicate
detection service (Z39.50-1995 Amendment 2) and Language Negotiation (3).
See:
 http://lcweb.loc.gov/z3950/agency/amend/am2.html
 http://lcweb.loc.gov/z3950/agency/defns/charneg-3.html

--- 1.8.5 2002/02/03

New YAZ client features: Command completion and new commands:
push_command, set_apdufile, set_marcdump, set_cclfields, register_oid.
Code provided by Jacob Poulsen.

New call oid_trav, that visits all registered OIDs via callback.

Function ZOOM_record_get now returns const char pointer rather than
void pointer. It saves a lot of type casts.

For YAZ client, command "auth" now allows you to set authentication
in IdPass style. It is enabled when three tokens are given - order
is user, group and password.

Fix memory leaks in MARC record handling for ZOOM.

New option for YAZ client, -k <kilobytes> that sets
maximum record size. Similar to -k option for generic frontend
server and yaz-ztest.

More fixes for scan. Non-zero stepSize handled. OID's fixes.

Prefix query parser reports "fail" when bad attribute set is given.

Fix in MARC decoder. Proximity logging. Fix for attribute set
in scan handler for server. Patches by Shigeru Ishida.

SSL/COMSTACK updates. cs_rcvconnect completes SSL handshake. ZOOM
works with SSL.

Configure option --with-openssl=<dir> now works when a directory is
specified. Patch provided by Morten Bogeskov.

New option for YAZ client, -u <auth>, that sets authentication.

ZOOM fix: error information was sometimes "missing", since error
was cleared/reset too when it shouldn't.

ZOOM_record_get returns ISO2709 buffer when "raw" is given.

--- 1.8.4 2002/01/04

Scan for ZOOM API. New object ZOOM_scanset. New functions
ZOOM_connection_scan, ZOOM_scanset_size, ZOOM_scanset_term and
ZOOM_scanset_destroy.

New ZOOM function, ZOOM_connection_last_event, that returns type
of last event (such as "receive data", "send data", "apdu received",
etc.

New ZOOM option, schema, that specifies schema for retrieval.

New CCL feature. Qualifiers can be aliases for one or more
other qualifiers (if more than one is given, OR is used).

ZOOM uses named result sets if target supports it.

Two new YAZ client commands: .  (dot, which sources a script of YAZ
client commands), and ! (to execute shell command.). Implemented
by Jacob Poulsen.

Working on Debian packages.

--- 1.8.3 2001/11/19

YAZ client enables named result sets only if target supports it.

*** ZOOM. Prefix for ZOOM definitions changed from Z3950_ to ZOOM_.

* ZOOM. Removed Z3950_connection_host. Use Z3950_connection_option_get
with key="host" to get same result.

* ZOOM. Added Z3950_record_clone and removed Z3950_resultset_get.
Function Z3950_resultset_record(s) returns references to records
"owned" by resultset. To become owner use Z3950_record_clone.

Function z_ext_record handles Extended Services. Thanks to
Irina Dijour.

--- 1.8.2 2001/11/12

CCL Parser fix: ignore token comma when dealing with and-lists.

Documentation updates for COMSTACK.

* ZOOM changes. Query object renamed from Z3950_search to Z3950_query.
Changed prototype Z3950_records. For some functions, int parameters
were changed to size_t.

TCP/IP COMSTACK no longer uses getprotobyname to avoid memory leak
on some Unices.

New MARC decode/display function, marc_display_exl, which properly rejects
non-ISO2709 records. YAZ client uses it.

--- 1.8.1 2001/10/29

Fix bug: local attribute set wasn't set correctly in PQF strings.

--- 1.8 2001/10/25

* Old Z39.50 codecs no longer supported. 

Added ZOOM C binding. See http://zoom.z3950.org/

Renamed states for COMSTACKs to avoid confusion with events.

Implemented cs_look and proper cs_rcvconnect.

Fixed COMSTACK error that occurred on HPUX. Fix by Giannis Kosmas.

Configure detects POSIX threads on OpenBSD.

When sort flag 'i' was specified in yaz-client the caseSensitivy flag
was set to a wrong value.  Thanks to Robert Sanderson for reporting this.

When error is returned from present handler, non-surrogate diagnostic
is returned in present response (and fetch handler is no longer called).

* Minor adjustments to pquery parser (PQF). Token characters may be
escaped by using backslash (C-style).

PQF parser allows string attribute values to be specified. For @attr,
non-numeric characters after the equal-sign are treated as strings
(e.g. @attr 9=title).

CCL trunction character may be defined (@truncation in file)

* function zget_ExtendedServicesRequest sets waitAction to
  waitIfPossible (was wait).

Added cs_set_blocking to set change blocking mode of a COMSTACK. Thanks
to Matthew Carey.

CCL operator names may be set in field definition files (CCL_bibset).
See ccl/bib1 for an example.

Fixes in ASN.1 compiler for C++ compatibility.

* Renamed members "and" and "or" in struct Z_Operator to "op_and"
and "op_or" to avoid conflict with C++.

Fixed problem with GNU readline detection on Redhat 7.0.

Added step-size for Scan backend handler.

Fixed bug that made the frontend server crash when no attribute
set was specified for scan.

Front-end server automatically switches to original working directory
when installed as an NT service. Previously -w had to be specified to
make it work.

Added extended attributes for retrieval module (data1), so that data1
records carry d1_readXML/SGML attributes. d1_read also supports
null-data rules ( <tag/>)

On UNIX when POSIX threads are available, a separate library libyazthread
is created. Programmers should link with that library and the yaz library
when using threads. The reason for the split was that some applications
on Linux, such as Apache, doesn't work well when using shared objects that
relies on threads.

Added SSL support for the COMSTACK. You start yaz-client and yaz-ztest
(or any frontend server) in SSL mode by specifying ssl: followed by
address. Only tested on UNIX.

Added feature for CCL module. Virtual structure s=al or s=ol generates
and-list and or-list respectively instead of phrase search.

Added some OID's.

* Added prefix "yaz_" for the functions log_init.., log_file..  and
log_mask_str. This was done to avoid name conflicts with other libraries
(such as other PHP extensions).

Added raw OID member for preferred record syntax (request_format_raw)
and returned record syntax (output_format_raw) for backend fetch method.

Config file yaz-config now accepts options so that it returns specific
compile settings, etc. Thanks to Morten Bogeskov <morten@bogeskov.dk>

Shared library support for UNIX using GNU libtool.

* Modified backend interface. Request/Response struct's replaced by
one read/write C struct. For example bend_fetchrequest and
bend_fetchresult have been replaced by single bend_fetch_rr struct.
Every handler - even search has to be registered in bend_init
handler. This means that the YAZ library no longer refers to
external functions and it makes it possible to make the whole
thing a single DLL/SO.

Added Segment handler for backend server.

Added Zmbol/Zebra administrative functions to YAZ client.

Threaded frontend server on UNIX (when POSIX Threads are available).
Starting the server with option -T enables multi-threading.

--- 1.6 2000/03/03

Added configure option --enable-comp/disable-comp to control use
of YAZ ASN.1 compiler. Use --disable-comp to use the old *coders
located in sub directory asn.

YAZ ASN.1 compiler renamed to yaz-comp in sub directory. It's installed
in ${exec_prefix}/bin along with the other programs yaz-client and
yaz-ztest.

GNU automake used to maintain makefiles.

Added several OID's.

Changed retrieval module so that we can load records with no abstract
syntax defined. Tagpaths in these records are fully composed of string
tags.

Implemented ISO ILL protocol. Refer to stuff in sub directory ill.

--- 1.5 1999/12/10

On UNIX, the generated makefile now supports a proper 'make install'.
The prefix can be set via GNU configure to set the install location
(default is /usr/local).

* YAZ programs client and ztest were renamed to yaz-client and
yaz-ztest to avoid conflicts when users install YAZ in "standard"
locations, such as /usr/bin,/usr/local/bin,etc.

* YAZ Header files were moved from include to include/yaz. YAZ Header
files are referred to as include <yaz/log.h> rather than <log.h>.
The YAZ include path (-I ..) is therefore the same as before. Programmers
should update their #include statements or use -Ipath/include/yaz
instead. The main motivation for doing this change is that YAZ header files
can be installed in "standard" locations /usr/include,/usr/local/include 
without introducing conflicts, since ALL YAZ header files are stored
in subdirectory yaz (under /usr/include for example).

Compilation of YAZ for WIN32 is now handled by an nmake-style makefile 
rather than project/workspace files. We switched because project files
are incompatible between Visual C++ 5 and 6. Refer to windows.txt for
details.

Changed name of logging function, logf, to yaz_log, to prevent name
clash with some math-log functions. The YAZ header log.h defines logf
to yaz_log (#define) so there should be no incompatibilities by this
modification.

Added bend_start/bend_stop handlers for server. These handler are
called on start/stop of server. For windows they are called whenever
a service is started/stopped.

* YAZ now auto-generates decoders/encoders for the Z39.50 protocol using
a fairly small ASN.1 compiler written in Tcl. The compiler is located
in util/yc.tcl. The auto-generated C code structures are, in a few
cases, incompatible with the old decoders. There are differences in the
following C structures Z_DiagRec, Z_External, Z_SortRequest, Z_SortResponse,
Z_AttributesPlusTerm, Z_ProximityOperator, Z_DefaultDiagFormat.
The preprocessor variable ASN_COMPILED is defined when the compiled
ASN.1 is being used. Encoder/decoder routines as well as the Z39.50
protocol ASN.1 is located sub directory <tt>z39.50</tt>. If you
wish to use the old encoders/decoders you can specify --disable-yc
for configure.

Assigned OID for old DB Update (VAL_DBUPDATE0). Updated YAZ compiled
version so that it supports both new - and old version of DB Update

* Added 'name' parameter to ODR encoder/decoder routines to facilitate
pretty ODR print. Updated whole Z39.50 encoder/decoder to reflect the
change. The name parameter can be set to 0 in which no name is specified
for the construction. The macros odr_implicit and odr_explicit sets name
parameter to zero for the construction involved. New macros
odr_implicit_tag and odr_explicit_tag are similar to the others,
except that a name parameter is added. For programmers' that don't use
ODR they probably only need to change the call to z_APDU and z_External.

Added access control facility by interfacing the TCP wrapper library.
YAZ automatically attempts to find the TCP wrapper Library (-lwrap) and
tcpd.h on Unix systems. For the server, option -d<daemon> specifies the
name of the daemon and enables the access control as specified in
hosts.allow/hosts.deny. Refer to man pages tcpd(8) and hosts_access(5).

Fixed memory leak in ccl_find_str and ccl_qual_rm. Thanks to Hans van
den Dool <H.M.vdnDool@kub.nl>.

Added reference ID parameter to most functions in server API - refer
to backend.h. Thanks to Hans van den Dool <H.M.vdnDool@kub.nl>.

Changed name of ccl library to libccl.a (was ccl.a).

Fixed bug in decoder for Explain (Category TargetInfo).

Added support for GNU readline in client. Thanks to Jacob Poulsen
<ja7@dbc.dk>. GNU configure attempts to detect if readline is available.

* CHANGED DEFINITION OF ES: UPDATE (INCLUDING THE OID) to reflect the
new definition from the ZIG. NOTE THIS IF YOU HAVE AN UPDATE
IMPLEMENTATION! This change was made to the development version before
the ZIG decided to retract the amendment. If any users MUST be
compatible with the original Update definition, PLEASE CONTACT US, and
we will include a separate definition corresponding to the old Update
ES. Note that because of the change to the ASN.1 of the
TaskPackageRecordStructure we cannot define a single structure that
will support both versions.

* Added const modifier to buffer parameter for some ODR/BER encoding
routines: ber_dectag, ber_declen, odp_more_chunks, completeBER,
completeWAIS, odr_dumpBER.

Fixed bug in client.c which caused a crash when a scanResponse didn't
contain positionOfTerm.

* Fixed inconsistency in the ScanResponse/ListEntries protocol. This
* will cause an error in a client if a non-YAZ target sends both a
* list of Scan entries and non-surrogate diagnostics.

Retrieval module enhancements. Tag sets may be typed in the reference
to it. From the .abs-file the "tagset" directive takes a third optional
integer type for the tag set referenced. From a .tag-file the "include"
directive takes a third optional type as well. The old "type" directive
in the tag set itself is still recognized but acts as the default type
for the tag set.

Backend interface change. Individual Scan terms returned from bend_scan
may also be tagged as Surrogate Diagnostics. Refer to struct scan_entry
in include/backend.h.

Retrieval module enhancements. Multiple tag sets and attribute sets may
be specified in abstract syntax specs. Revised the error/warning for
logging messages reported by the retrieval module when reading the
various spec files.

Object Identifier system (oid_..) changed. The API is backwards
compatible but the oid-routines now allocates new OID's when needed.
Raw OID's may be specified in oid_getvalbyname.

YAZ now uses GNU configure to generate Makefile(s).

* Minor changes in some of the member names of DeleteResultSetRequest and
DeleteResultSetResponse. See include/proto.h.

* Changed some C definitions regarding EXPLAIN record syntax (prt-exp.h)
and added member 'languages' in TargetInfo (which was missing).

Changed the way attribute sets are handled in the retrieval
module. These are now cached, just like the abstract syntaxes
(schemas).

Changed YAZ so that it links with compiled ASN.1.

Added Explain-schema definitions and mapping routines. The following
Explain categories have been implemented: AttributeDetails,
AttributeSetInfo, DatabaseInfo, CategoryList and TargetInfo.

Fixed minor bug in Windows version of Server Library.

--- 1.4pl2+ 1998/4/17 (Released with Zebra)

Added Extended Services to server (backend.h). Thanks to Charles Woodfield.

Added EXTERNAL: UNIverse Resource Report (non-standard).

Implemened odr_enum and odr_set_of functions to handle ASN.1 types
ENUMERATED and SET OF.

* Added 'const' to some of the char pointer arguments for the
functions, data1_read_node, data1_getelementbytagname,
data1_insert_taggeddata, data1_getesetbyname, data1_getelementbyname,
data1_get_absyn.

Fixed bug in data1_insert_taggeddata - the last_child member of
parent wasn't initialised.

* Changed data1_read_record and data1_read_node so that the supplied
"SGML"-buffer is read-only. In particular the resulting data1 - tree
doesn't refer to any parts of the "SGML"-buffer.

Fixed bug in server library (Windows version of statserv_remove).

* Changed code so that it compiles as C++. The type definition
of Odr_fun which is a member of Odr_arm was changed. The result is,
that an explicit typecast is needed for the fun pointer when
using Odr_arm - as in:
    {1, -1, -1, Z_IdAuthentication_idPass, (Odr_fun)z_IdPass},

Updated TagSet-G and -M definitions (tagsetm.tag and tagsetg.tag).

Implemented the new structured date and time definition as approved
by the ZIG. Added schemaId element to the specificTag in Espec-1
(also approved at the last ZIG). Thanks to RVDM.

Added some Object identifiers (RVDM).

Changed the Update Extended Service (RVDM).

Added command "refid" to client which specifies referenceId for
the following requests.

Implemented extended service handling for server. See ztest.c
for an example as well as backend.h. New handlers are registerd
in the Init handler.

* Changed interface for sort in server.

Added new members to statserv_options_block. It allows a server
to read options from another source than just the command line. Thanks
to Charles Woodfield.

* Changed definition of Z_Triple in file prt-grs.h - member boolean
renamed to zboolean. Some C++ compilers complained about the name.

Minor changes to gils.abs. Added index 's' (sort) on title
and date/time-last-modified.

--- 1.4pl2 1998/1/30

Fixed bug in server library regarding inetd mode (-i). This bug
was introduced by release 1.4.

--- 1.4pl1 1998/1/29

Added sort facility in client and backend server interface.

Fixed problem with dependencies in Makefile(s).

Fixed bugs for encoders/decoders of extended services and 
SearchInfoReport.

Implemented sub-tree feature for schemas. Sub-trees are
referenced in *.abs-files. See explain.abs for an example
of the use of this feature.

Modified bib1.att; local attributes for ANY didn't include
ANY itself (only affects use of the retrieval module).

Fixed bug in plain SGML reader in function data1_read_node:
tags with prefix "var" was incorrectly interpreted as variants.

Added feature "sub-schemas" to enable references to - and definitions
of - group of elements.

* Removed member parent from type data1_element (in data1.h).

Implemented function odr_nullval() that returns the value of
ODR_NULLVAL.

* Removed member num_children from data1_node (in data1.h).

Made NT service interface part of the server library. The
function statserv_main uses the NT service when required and
calls the statserv_start / statserv_close routines.

Routine zget_SearchRequest and zget_PresentRequest fills
resultSetName/Id member with "default" instead of "Default".

Fixed memory leak in server. Request queue member wasn't freed.

Fixed nmem_exit so that memory is freed.

--- 1.4 1997/10/2

Revised the CCL parser utility to be thread safe.

Added function, oid_ent_to_oid, to replace the function 
oid_getoidbyent, which is not thread safe.

* Added nmem_init and nmem_exit to initialize and release
NMEM resources. Function nmem_init should be called once in the
initial thread before NMEM/ODR is used. statserv.c and client.c
have been changed accordingly. The change was necessary to make
NMEM thread safe. The NMEM memory pool is shared amongst threads
in a process. Unix-based applications will still work fine without
calling this.

Added NT Services interface for the the Z39.50 (statserv) Server. 
Refer to the ztest.c source on the usage.

Windows 95/NT port using MSVC5.0. Project files are included in the
distribution.

* Defined new 'global' handle for the retrieval (data1) system. The
new handled, data1_handle, describes the state of the data1 system.
This handle is passed as first argument to virtually all
data1 related routines. The functions data1_create and data1_destroy
creates and destroys a data1 handle respectively.

Added ODR encode stream member to all backend request structures
init, search, scan etc. This stream should be used to allocate all
memory used for the response when thread safe operation is needed.

Changed the comstack utility, cs_addstr, to be thread safe. The
returned hostname string returned by the function is now part the
COMSTACK instance.

Added comstack utility, cs_straddr, which replaces the tcpip_strtoaddr
function. The cs_straddr takes a COMSTACK handle as argument, so this
function must be used after cs_create and before bind/connect.
This function is thread safe.

Moved test server to 'ztest' directory - generic server code still
in 'server' directory.

Made prefix query (pquery.c) utility thread safe.

Added new function modifier YAZ_EXPORT to 'export' public DLL
functions when using windows (see include/yconfig.h).

Added definitions to the OID database (util/oid.c) (RVDM).

Added new BIB-1 diagnostic messages to the handler diagbib1_str.

Added call to ccl_rpn_delete in client program.

Added ODR argument to ccl_rpn_query and ccl_scan_query to provide
release of RPN structure.

Added support for C++, headers uses extern "C" for public definitions.
With input from RVDM.

In handling of SEQUENCE OF: Counter set to zero when SEQUENCE OF is absent.
Thanks to Ronald van der Meer (RVDM).

Added initializers (zget_ routines) for a number of PDUs. Thanks to RVDM.

Added support for private extensions to the OID database
(oid_setprivateoids()). Thanks to RVDM.
    
Added optional, physical ANY (key replication)

Fixed null-reference problem in GRS-1 output filter.

Proximity operator added to Prefix Query Format (PQF).

In test client command "base" accepts multiple databases.

Fixed bug in cs_close stack that caused trouble with WINSOCK.

--- 1.3 1996/10/11

Fixed tagging bug in ResourceReportResponse PDU encoder/decode.

Smallish bug-fixes in the new encoders/decoders (explain).

Bug fixed in DeleteRequest.

Fixed tagging bug of type 101 query in SearchRequest-Query PDU encoder/decoder.

Fixed tagging bug in ResourceReportResponse PDU encoder/decode.

Added SOIF syntax (using private OID for now) to retrieval module and client.

Added Update extended service.

Added SearchResult-1 additional info structure.

Added optional CCL (ISO8777) interpreter as separate module. Available
in linemode client.

--- 1.2 1996/6/10 (1st anniversary release)

Added Summary record syntax. Lightly tested.

Added OPAC record syntax. Untested.

Added ResourceReport service encoders/decoders. Untested.

Fixed bug in z_Unit - wrong tagging on unitSystem.

Fixed bug in the DiagRecs decoder.

Added options for max PDU size and session timeout to frontend-server.

Added documentation of query-language parsers and other supporting utilities.

[frontend-server] Added Attribute set to the bend_scanrequest API.

[frontend-server] NextResultSetPosition was sometimes set incorrectly when
surrogate diagnostics were generated.

[retrieval] Allow multiple local values for attribute.

[retrieval] Allow multiple attributes per element in .abs files. index type.

[retrieval] Added Summary tagset, abstract syntax, and d1-node/ASN filter.

--- 1.1pl2  1996/4/10

Minor changes, mostly specific to Zebra's requirements (retrieval)

--- 1.1  1996/2/20

Repaired bug in frontend server when running multiple listening
endpoints in dynamic mode.

z_External() now won't break if a known, ASN.1 value comes encapsulated
in an octet-string. The value will pass through unmodified in an Odr_oct.

Added a bit of code to the demo client to decode & display
ASN.1-structured records represented in the octet-aligned branch of
the EXTERNAL CHOICE. Thanks to CAS for prodding us to finally do this.

Added z_ext_getentbyref() to the ASN module. Doc updated.

* Completed the SCAN definition in the ASN module. This may break SCAN
code based on older YAZ-versions at compile-time. The fix is easy -
look in proto.h.

* Added 'displayTerm' and OtherInformation to the TermInfo structure
under the SCAN definition. Remember to initialize this, server-people.

Comstack should now support the WAIS protocol in TCP/IP mode. Note
that this does not extend to ODR and ASN.

Comstack allows insertion of established socket (primarily for
inetd-operation of servers). Doc updated.

Front-end server can now start from the inetd in TCP mode. Doc
updated.

--- 1.0pl4 1996/1/24

Added Sort PDU.

Fixed small problem in SUTRS-filter. A newline was sometimes inserted before
the rank and record number.

Adjustments to the frontend server.

Fixed diagnostic BER dumper. It ignored the file argument.

--- 1.0pl3 1996/1/2

Various changes to retrieval module.

Changed the union discriminators of the protocol files from enums to
ints paired with #defines.

*Changed oident.class to oident.oclass to avoid a reserved word in C++
 compilers.

*Changed operator in the RPN structure to 'roperator', again to avoid a
 conflict with C++.

Fixed problems in Explain decoders/encoders.

--- 1.0pl2 1995/12/6

Memory bug in log module fixed.

--- 1.0pl1 1995/12/5

Occasional malloc() of 0 bytes fixed in d1_espec.c.

Bug in Explain DatabaseInfo module fixed.

Some '\r' snuck into one or two of the ret'l config tables. A curse on Windows.

--- 1.0 1995/11/28

The shift to v1.0 signals that we now consider the *core* functionality
of YAZ reasonably stable (the core being more or less equivalent to
Z39.50-1992). Some of the really nifty v3 stuff is still not heavily
tested (Explain not at all - though that will happen soonish).

Minor changes to code to support Windows port.

Various minor changes after we're getting to use GRS-1 & co. more.

Added Espec-1 format.

Added VisibleString field body type to GRS-1. It is illegal acc. to my copy
of the protocol and it cannot be selected when encoding (maps into 'string'
when decoding). Needed to talk to some servers.

Demo client can request simple element set names.

Added Diagnostic Format encoders/decoders.

Added simple Close handling to frontend server (no hooks for resource
reporting yet), and demonstration client.

Added cs_addrstr() command to COMSTACK to retrieve peer hostname/address.

--- 1.0b3 1995/08/24

Fixed bug in the frontend-server. The numberOfRecordsReturned field was
handled incorrectly when records were requested in the searchResponse. This
will only affect you if you use the frontend-server.

Added GRS-1 encoders/decoders to the service-level API. Lightly tested.
Test-client will ask for and print GRS1. Ztest will return dummy records
on request.

Added Explain encoders/decoders to the service-level API. Untested.

Added Extended Services: Item Order encoders and decoders to the Service-
level API. Untested. We could use a recent copy of the pertinent bits
of the ILL protocol to add those bits.

Added diagnostic format 1 encoders/decoders to the service-level API.
Untested.

Moved pretty-printing of structure-wrappers ({..}) from odr_seq.c to
odr_cons.c, which causes a more correct output.

Fixed handling of searchRequest in frontend server. NextResultSetPosition
was always set to 0 when no records were requested in the searchRequest.

* Added better external-handling. This shouldn't harm old code that
*encodes* externals. It can break code that looks for a
'single-ASN1-type' representation, since those types that are known
are now decoded immediately. Look at the SUTRS sample code in
seshigh.c and client.c. Documentation updated.

Handling of structured records in bend_fetchresponse. Length -1 marks
structured record, type is deduced from format field.

--- 1.0b2 1995/06/27
Fairly quick maintenance release to add SUTRS support.

Fixed handling of SUTRS records in the demonstration client.

* Added format field to the bend_fetchrequest and bend_fetchresponce
structures of the backend API (frontend server). When the record is
returned, the value of the format field is mapped to an OID. The
value VAL_SUTRS will also cause a slightly different ASN.1 packaging
of the record. The special value VAL_NONE in the bend_request means
that no specific format was requested by the client. Documentation
updated accordingly. Test server (ztest) will return a fixed dummy
SUTRS record if your client requests SUTRS.

Documentation updated accordingly.

You can now set external libraries and RANLIB support in the top-level
Makefile.

--- 1.0b 1995/06/19
First public release.
