.title overdueList
.category Circulation
.layout overdue title="Overdue Letters"
.column bibid hidden
.column copyid hidden
.column mbrid hidden
.column barcode_nmbr sort=barcode_nmbr title="Barcode"
.column callno sort=callno title="Call Number"
.column title sort=title func=biblio_link title="Title"
.column author sort=author title="Author"
.column member_bcode sort=member_bcode title="Member Barcode"
.column name sort=name func=member_link title="Member Name"
.column status_begin_dt sort=status_begin_dt title="Checkout Date"
.column due_back_dt sort=due_back_dt title="Due Date"
.column days_late sort='due_back_dt!r'
.parameters
.	date as_of title="As of" default="today"
.	order_by
.		item barcode_nmbr expr='c.barcode_nmbr' title="Barcode"
.		item callno expr="concat_ws(' ', b.call_nmbr1, b.call_nmbr2, b.call_nmbr3)" title="Call Number"
.		item title title="Title"
.		item author title="Author"
.		item member_bcode expr='m.barcode_nmbr' title="Member Barcode"
.		item name expr="concat(m.last_name, ', ', m.first_name)" title="Member Name"
.		item status_begin_dt title="Checkout Date"
.		item due_back_dt title="Due Date"
.	end order_by
.end parameters
.sql
	select c.bibid, c.copyid, m.mbrid, c.barcode_nmbr,
		concat_ws(' ', b.call_nmbr1, b.call_nmbr2, b.call_nmbr3) as callno,
		b.title, b.author, c.status_begin_dt,
		c.due_back_dt, m.barcode_nmbr member_bcode,
		concat(m.last_name, ', ', m.first_name) name,
		floor(to_days(now())-to_days(c.due_back_dt)) days_late
	from biblio b, biblio_copy c, member m
	where b.bibid = c.bibid
		and c.mbrid = m.mbrid
		and c.status_cd = 'out'
.	if_set as_of
		and c.due_back_dt < %as_of%
.	end if_set
.	order_by_expr
.end sql
